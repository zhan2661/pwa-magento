{"version":3,"sources":["../src/index.js"],"names":["debug","cloneDeep","isIdentifier","isMemberExpression","isImportDefaultSpecifier","variableDeclaration","variableDeclarator","memberExpression","callExpression","identifier","types","uniqueFn","api","assertVersion","compile","path","uniqueId","source","node","quasis","reduce","head","quasi","value","raw","expressions","get","forEach","expr","buildCodeFrameError","queryDocument","definitions","length","definition","name","Error","body","uniqueUsed","definitionsProperty","properties","find","property","key","definitionsArray","extraDefinitions","map","allDefinitions","visitor","Program","programPath","tagNames","scope","generateUidIdentifier","traverse","ImportDeclaration","defaultSpecifier","specifiers","specifier","push","local","remove","filter","TaggedTemplateExpression","some","tag","used","replaceWith","error","console","unshiftContainer"],"mappings":"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","sourcesContent":["// @flow\n\nimport {types} from '@babel/core';\nimport {declare} from '@babel/helper-plugin-utils';\nimport {parseExpression} from '@babel/parser';\nimport parseLiteral from 'babel-literal-to-ast';\nimport gql from 'graphql-tag';\nimport createDebug from 'debug';\n\nconst debug = createDebug('babel-plugin-graphql-tag');\nconst {\n  cloneDeep,\n  isIdentifier,\n  isMemberExpression,\n  isImportDefaultSpecifier,\n  variableDeclaration,\n  variableDeclarator,\n  memberExpression,\n  callExpression,\n  identifier\n} = types;\n\n// eslint-disable-next-line no-restricted-syntax\nconst uniqueFn = parseExpression(`\n  (definitions) => {\n    const names = {};\n    return definitions.filter(definition => {\n      if (definition.kind !== 'FragmentDefinition') {\n        return true;\n      }\n      const name = definition.name.value;\n      if (names[name]) {\n        return false;\n      } else {\n        names[name] = true;\n        return true;\n      }\n    });\n  }\n`);\n\nexport default declare((api) => {\n  api.assertVersion(7);\n\n  const compile = (path: Object, uniqueId) => {\n    const source = path.node.quasis.reduce((head, quasi) => {\n      return head + quasi.value.raw;\n    }, '');\n\n    const expressions = path.get('expressions');\n\n    expressions.forEach((expr) => {\n      if (!isIdentifier(expr) && !isMemberExpression(expr)) {\n        throw expr.buildCodeFrameError(\n          'Only identifiers or member expressions are allowed by this plugin as an interpolation in a graphql template literal.',\n        );\n      }\n    });\n\n    debug('compiling a GraphQL query', source);\n\n    const queryDocument = gql(source);\n\n    // If a document contains only one operation, that operation may be unnamed:\n    // https://facebook.github.io/graphql/#sec-Language.Query-Document\n    if (queryDocument.definitions.length > 1) {\n      for (const definition of queryDocument.definitions) {\n        if (!definition.name) {\n          throw new Error('GraphQL query must have name.');\n        }\n      }\n    }\n\n    const body = parseLiteral(queryDocument);\n    let uniqueUsed = false;\n\n    if (expressions.length) {\n      const definitionsProperty = body.properties.find((property) => {\n        return property.key.value === 'definitions';\n      });\n\n      const definitionsArray = definitionsProperty.value;\n\n      const extraDefinitions = expressions.map((expr) => {\n        return memberExpression(expr.node, identifier('definitions'));\n      });\n\n      const allDefinitions = callExpression(\n        memberExpression(definitionsArray, identifier('concat')),\n        extraDefinitions,\n      );\n\n      definitionsProperty.value = callExpression(uniqueId, [allDefinitions]);\n\n      uniqueUsed = true;\n    }\n\n    debug('created a static representation', body);\n\n    return [body, uniqueUsed];\n  };\n\n  return {\n    visitor: {\n      Program (programPath: Object) {\n        const tagNames = [];\n        const uniqueId = programPath.scope.generateUidIdentifier('unique');\n        let uniqueUsed = false;\n\n        programPath.traverse({\n          ImportDeclaration (path: Object) {\n            if (path.node.source.value === 'graphql-tag') {\n              const defaultSpecifier = path.node.specifiers.find((specifier) => {\n                return isImportDefaultSpecifier(specifier);\n              });\n\n              if (defaultSpecifier) {\n                tagNames.push(defaultSpecifier.local.name);\n\n                if (path.node.specifiers.length === 1) {\n                  path.remove();\n                } else {\n                  path.node.specifiers = path.node.specifiers.filter((specifier) => {\n                    return specifier !== defaultSpecifier;\n                  });\n                }\n              }\n            }\n          },\n          TaggedTemplateExpression (path: Object) {\n            if (\n              tagNames.some((name) => {\n                return isIdentifier(path.node.tag, {name});\n              })\n            ) {\n              try {\n                debug('quasi', path.node.quasi);\n\n                const [body, used] = compile(path.get('quasi'), uniqueId);\n\n                uniqueUsed = uniqueUsed || used;\n\n                path.replaceWith(body);\n              } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error('error', error);\n              }\n            }\n          }\n        });\n\n        if (uniqueUsed) {\n          programPath.unshiftContainer(\n            'body',\n            variableDeclaration('const', [variableDeclarator(uniqueId, cloneDeep(uniqueFn))]),\n          );\n        }\n      }\n    }\n  };\n});\n"],"file":"index.js"}