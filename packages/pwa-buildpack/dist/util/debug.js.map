{"version":3,"sources":["../../src/util/debug.js"],"names":["path","require","debug","root","resolve","__dirname","pkg","toolName","name","split","pop","makeTag","parts","join","taggedLogger","tag","logger","errorMsg","msg","sub","module","exports","makeFileLogger","p","segments","relative","sep","length"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,IAAI,GAAGH,IAAI,CAACI,OAAL,CAAaC,SAAb,EAAwB,KAAxB,CAAb;;AACA,MAAMC,GAAG,GAAGL,OAAO,CAACD,IAAI,CAACI,OAAL,CAAaD,IAAb,EAAmB,iBAAnB,CAAD,CAAnB;;AACA,MAAMI,QAAQ,GAAGD,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAAjB;;AACA,MAAMC,OAAO,GAAG,CAAC,GAAGC,KAAJ,KAAcA,KAAK,CAACC,IAAN,CAAW,GAAX,CAA9B;;AAEA,MAAMC,YAAY,GAAGC,GAAG,IAAI;AACxB,QAAMC,MAAM,GAAGd,KAAK,CAACa,GAAD,CAApB;;AACAC,EAAAA,MAAM,CAACC,QAAP,GAAkBC,GAAG,IAAK,IAAGH,GAAI,KAAIG,GAAI,EAAzC;;AACAF,EAAAA,MAAM,CAACG,GAAP,GAAaA,GAAG,IAAIL,YAAY,CAACH,OAAO,CAACI,GAAD,EAAMI,GAAN,CAAR,CAAhC;;AACA,SAAOH,MAAP;AACH,CALD;;AAMAI,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,cAAc,CAACC,CAAD,EAAI;AACd,UAAMC,QAAQ,GAAGxB,IAAI,CAACyB,QAAL,CAActB,IAAd,EAAoBoB,CAApB,EAAuBd,KAAvB,CAA6BT,IAAI,CAAC0B,GAAlC,CAAjB;;AACA,QAAIF,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CAAR,KAAkC,UAAtC,EAAkD;AAC9CH,MAAAA,QAAQ,CAACd,GAAT;AACH;;AACD,UAAMK,GAAG,GAAGJ,OAAO,CAACJ,QAAD,EAAW,GAAGiB,QAAd,CAAnB;AACA,WAAOV,YAAY,CAACC,GAAD,CAAnB;AACH;;AARY,CAAjB","sourcesContent":["const path = require('path');\nconst debug = require('debug');\nconst root = path.resolve(__dirname, '../');\nconst pkg = require(path.resolve(root, '../package.json'));\nconst toolName = pkg.name.split('/').pop();\nconst makeTag = (...parts) => parts.join(':');\n\nconst taggedLogger = tag => {\n    const logger = debug(tag);\n    logger.errorMsg = msg => `[${tag}] ${msg}`;\n    logger.sub = sub => taggedLogger(makeTag(tag, sub));\n    return logger;\n};\nmodule.exports = {\n    makeFileLogger(p) {\n        const segments = path.relative(root, p).split(path.sep);\n        if (segments[segments.length - 1] === 'index.js') {\n            segments.pop();\n        }\n        const tag = makeTag(toolName, ...segments);\n        return taggedLogger(tag);\n    }\n};\n"],"file":"debug.js"}