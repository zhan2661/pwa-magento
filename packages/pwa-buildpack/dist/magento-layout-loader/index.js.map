{"version":3,"sources":["../../src/magento-layout-loader/index.js"],"names":["dynamicImportSyntax","require","babelLoader","babelPlugin","module","exports","magentoLayoutLoader","args","loaderConfig","query","babelPluginConfig","Object","assign","onWarning","warning","err","Error","_module","warnings","push","onError","error","errors","babelrc","plugins","shadowThis","create","value","apply"],"mappings":";;AAAA,MAAMA,mBAAmB,GAAGC,OAAO,CAAC,qCAAD,CAAnC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,+BAAD,CAA3B;AAEA;;;;;;AAIAG,MAAM,CAACC,OAAP,GAAiB,SAASC,mBAAT,CAA6B,GAAGC,IAAhC,EAAsC;AACnD;AACA,QAAMC,YAAY,GAAG,KAAKC,KAAL,IAAc,EAAnC;AAEA,QAAMC,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,YAAlB,EAAgC;AACtDK,IAAAA,SAAS,EAAEC,OAAO,IAAI;AAClB,YAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAW,0BAAyBF,OAAQ,EAA5C,CAAZ;;AACA,WAAKG,OAAL,CAAaC,QAAb,CAAsBC,IAAtB,CAA2BJ,GAA3B;AACH,KAJqD;AAKtDK,IAAAA,OAAO,EAAEC,KAAK,IAAI;AACd,YAAMN,GAAG,GAAG,IAAIC,KAAJ,CAAW,0BAAyBK,KAAM,EAA1C,CAAZ;;AACA,WAAKJ,OAAL,CAAaK,MAAb,CAAoBH,IAApB,CAAyBJ,GAAzB;AACH;AARqD,GAAhC,CAA1B,CAJmD,CAenD;AACA;;AACA,QAAMN,KAAK,GAAG;AACVc,IAAAA,OAAO,EAAE,KADC;AAEVC,IAAAA,OAAO,EAAE,CAACxB,mBAAD,EAAsB,CAACG,WAAD,EAAcO,iBAAd,CAAtB;AAFC,GAAd,CAjBmD,CAsBnD;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMe,UAAU,GAAGd,MAAM,CAACe,MAAP,CAAc,IAAd,EAAoB;AACnCjB,IAAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAElB;AAAT;AAD4B,GAApB,CAAnB;AAIA,SAAOP,WAAW,CAAC0B,KAAZ,CAAkBH,UAAlB,EAA8BlB,IAA9B,CAAP;AACH,CAjCD","sourcesContent":["const dynamicImportSyntax = require('@babel/plugin-syntax-dynamic-import');\nconst babelLoader = require('babel-loader');\nconst babelPlugin = require('./babel-plugin-magento-layout');\n\n/**\n * The Magento Layout Loader is a small wrapper around\n * babel-loader and a babel plugin.\n */\nmodule.exports = function magentoLayoutLoader(...args) {\n    // Don't bother supporting string-based queries until we need to\n    const loaderConfig = this.query || {};\n\n    const babelPluginConfig = Object.assign({}, loaderConfig, {\n        onWarning: warning => {\n            const err = new Error(`magento-layout-loader: ${warning}`);\n            this._module.warnings.push(err);\n        },\n        onError: error => {\n            const err = new Error(`magento-layout-loader: ${error}`);\n            this._module.errors.push(err);\n        }\n    });\n\n    // Options we want to pass through to the babel-loader\n    // we are wrapping\n    const query = {\n        babelrc: false,\n        plugins: [dynamicImportSyntax, [babelPlugin, babelPluginConfig]]\n    };\n\n    // Yuck. babel-loader reads options from the webpack loader's\n    // `this.query` property (through loader-utils). We need to set this property\n    // to pass through options, but webpack has a `getter` without a `setter`\n    // so we can't just mutate `this.query`. Instead of the mutation,\n    // we create a new object with the proto pointed at the current `this`,\n    // and just shadow the `query` prop\n    const shadowThis = Object.create(this, {\n        query: { value: query }\n    });\n\n    return babelLoader.apply(shadowThis, args);\n};\n"],"file":"index.js"}