{"version":3,"sources":["../../src/Utilities/configureHost.js"],"names":["debug","require","makeFileLogger","__filename","join","createHash","devcert","os","chalk","execa","username","userInfo","devCertUtils","MacOSPlatform","proto","default","prototype","isNSSInstalled","run","toString","includes","e","DEFAULT_NAME","DEV_DOMAIN","isSudoSession","shell","then","catch","alreadyProvisioned","hostname","configuredDomains","getCert","Promise","resolve","reject","timeout","setTimeout","Error","process","stdin","isTTY","console","warn","greenBright","whiteBright","clearTimeout","certBuffers","certificateFor","key","cert","getUniqueDomainAndPorts","customName","addUniqueHash","name","pkgLoc","cwd","pkg","errorMsg","dirHash","update","digest","subdomain","slice","uniquePortOffset","parseInt","Buffer","from","ports","development","staging","uniqueSubdomain","toLowerCase","replace","configureHost","exactDomain","interactive","ssl","stack","module","exports"],"mappings":"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","sourcesContent":["const debug = require('../util/debug').makeFileLogger(__filename);\nconst { join } = require('path');\nconst { createHash } = require('crypto');\nconst devcert = require('devcert');\nconst os = require('os');\nconst chalk = require('chalk');\nconst execa = require('execa');\nconst { username } = os.userInfo();\n\n/**\n * Monkeypatch devcert to fix\n * https://github.com/magento-research/pwa-studio/issues/679 which is blocked by\n * https://github.com/davewasmer/devcert/pull/30.\n * TODO: Remove this when a release of devcert without this bug is available\n */\nconst devCertUtils = require('devcert/dist/utils');\nconst MacOSPlatform = require('devcert/dist/platforms/darwin');\nconst proto = (MacOSPlatform.default || MacOSPlatform).prototype;\nproto.isNSSInstalled = function() {\n    try {\n        return devCertUtils\n            .run('brew list -1')\n            .toString()\n            .includes('\\nnss\\n');\n    } catch (e) {\n        return false;\n    }\n};\n\nconst DEFAULT_NAME = 'my-pwa';\nconst DEV_DOMAIN = 'local.pwadev';\n\nconst isSudoSession = () =>\n    execa\n        .shell('sudo -n true')\n        .then(() => true)\n        .catch(() => false);\n\nconst alreadyProvisioned = hostname =>\n    devcert.configuredDomains().includes(hostname);\n\nfunction getCert(hostname) {\n    // Manually create a Promise here to obtain a \"reject\" function in closure,\n    // so we can use a setTimeout to reject the promise after 30 seconds.\n    return new Promise(async (resolve, reject) => {\n        const timeout = setTimeout(\n            () =>\n                reject(\n                    new Error(\n                        'Timed out waiting for SSL certificate generation and trust.'\n                    )\n                ),\n            30000\n        );\n        try {\n            if (!alreadyProvisioned(hostname)) {\n                if (process.stdin.isTTY) {\n                    if (!(await isSudoSession())) {\n                        console.warn(\n                            chalk.greenBright(`Creating a local development domain requires temporary administrative privileges.\nPlease enter the password for ${chalk.whiteBright(\n                                username\n                            )} on ${chalk.whiteBright(os.hostname())}.`)\n                        );\n                    }\n                } else {\n                    clearTimeout(timeout);\n                    return reject(\n                        new Error(\n                            'Creating a local development domain requires an interactive terminal for the user to answer prompts. Run the development server (e.g. `yarn run watch:venia`) by itself in the terminal to continue.'\n                        )\n                    );\n                }\n            }\n            const certBuffers = await devcert.certificateFor(hostname);\n            clearTimeout(timeout);\n            resolve({\n                key: certBuffers.key.toString('utf8'),\n                cert: certBuffers.cert.toString('utf8')\n            });\n        } catch (e) {\n            clearTimeout(timeout);\n            reject(e);\n        }\n    });\n}\n\nfunction getUniqueDomainAndPorts(customName, addUniqueHash) {\n    let name = DEFAULT_NAME;\n    if (typeof customName === 'string') {\n        name = customName;\n    } else {\n        const pkgLoc = join(process.cwd(), 'package.json');\n        try {\n            // eslint-disable-next-line node/no-missing-require\n            const pkg = require(pkgLoc);\n            if (!pkg.name || typeof pkg.name !== 'string') {\n                throw new Error(\n                    `package.json does not have a usable \"name\" field!`\n                );\n            }\n            name = pkg.name;\n        } catch (e) {\n            console.warn(\n                debug.errorMsg(\n                    `Using default \"${name}\" prefix. Could not autodetect project name from package.json: `\n                ),\n                e\n            );\n        }\n    }\n    const dirHash = createHash('md4');\n    // Using a hash of the current directory is a natural way of preserving\n    // the same \"unique\" ID for each project, and changing it only when its\n    // location on disk has changed.\n    dirHash.update(process.cwd());\n    const digest = dirHash.digest('base64');\n\n    const subdomain = addUniqueHash ? `${name}-${digest.slice(0, 5)}` : name;\n    // Base64 truncated to 5 characters, stripped of special characters,\n    // and lowercased to be a valid domain, is about 36^5 unique values.\n    // There is therefore a chance of a duplicate ID and host collision,\n    // specifically a 1 in 60466176 chance.\n\n    // Use the same current directory hash to create a \"unique\" port number.\n    // This creates a number from 1 to 1000 that wil stay constant for the\n    // current directory. We'll create dev and staging ports for it.\n    const uniquePortOffset =\n        parseInt(\n            Buffer.from(digest, 'base64')\n                .toString('hex')\n                .slice(-5),\n            16\n        ) % 1000;\n\n    const ports = {\n        development: 8000 + uniquePortOffset,\n        staging: 9000 + uniquePortOffset\n    };\n    // In contrast, port collisions are more likely (1 in 1000), It could be a\n    // lower probability if we allowed more possible ports, but for convenience\n    // and developer recognition, we limit ports to the 8xxx range for\n    // development and 9xxx range for staging. Fortunately, unlike domains,\n    // ports are easy to rebind at runtime if a collision occurs.\n\n    return {\n        uniqueSubdomain: subdomain\n            .toLowerCase()\n            .replace(/[^a-zA-Z0-9]/g, '-')\n            .replace(/^-+/, ''),\n        ports\n    };\n}\n\nasync function configureHost({\n    addUniqueHash = true,\n    subdomain,\n    exactDomain,\n    interactive = true\n} = {}) {\n    const { uniqueSubdomain, ports } = getUniqueDomainAndPorts(\n        exactDomain || subdomain,\n        addUniqueHash\n    );\n    let hostname;\n    if (exactDomain) {\n        hostname = exactDomain;\n    } else {\n        hostname = uniqueSubdomain + '.' + DEV_DOMAIN;\n    }\n    if (!alreadyProvisioned(hostname) && interactive === false) {\n        return false;\n    }\n    try {\n        return {\n            hostname,\n            ports,\n            ssl: await getCert(hostname)\n        };\n    } catch (e) {\n        throw Error(\n            debug.errorMsg(`Could not setup development domain: \\n${e.stack}`)\n        );\n    }\n}\n\nconfigureHost.getUniqueDomainAndPorts = getUniqueDomainAndPorts;\nconfigureHost.DEFAULT_NAME = DEFAULT_NAME;\nconfigureHost.DEV_DOMAIN = DEV_DOMAIN;\n\nmodule.exports = configureHost;\n"],"file":"configureHost.js"}