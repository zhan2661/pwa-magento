{"version":3,"sources":["../src/index.js"],"names":["React","ReactDOM","setContext","Util","Adapter","store","app","App","BrowserPersistence","apiBase","URL","location","origin","toString","authLink","_","headers","storage","token","getItem","authorization","render","link","concat","apolloLink","document","getElementById","process","env","SERVICE_WORKER","navigator","window","addEventListener","serviceWorker","register","then","registration","console","log","catch","error","dispatch","setOnline","setOffline"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,SAASC,OAAT;AACA,OAAOC,KAAP;AACA,OAAOC,GAAP;AACA,OAAOC,GAAP;AACA;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAyBL,IAA/B;AACA,MAAMM,OAAO,GAAG,IAAIC,GAAJ,CAAQ,UAAR,EAAoBC,QAAQ,CAACC,MAA7B,EAAqCC,QAArC,EAAhB;AAEA;;;;;;AAKA,MAAMC,QAAQ,GAAGZ,UAAU,CAAC,CAACa,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC5C;AACA,QAAMC,OAAO,GAAG,IAAIT,kBAAJ,EAAhB,CAF4C,CAG5C;;AACA,QAAMU,KAAK,GAAGD,OAAO,CAACE,OAAR,CAAgB,cAAhB,CAAd,CAJ4C,CAM5C;;AACA,SAAO;AACHH,IAAAA,OAAO,oBACAA,OADA;AAEHI,MAAAA,aAAa,EAAEF,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFxC;AADJ,GAAP;AAMH,CAb0B,CAA3B;AAeAjB,QAAQ,CAACoB,MAAT,CACI,oBAAC,OAAD;AACI,EAAA,OAAO,EAAEZ,OADb;AAEI,EAAA,MAAM,EAAE;AAAEa,IAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBnB,OAAO,CAACoB,UAAR,CAAmBf,OAAnB,CAAhB;AAAR,GAFZ;AAGI,EAAA,KAAK,EAAEJ;AAHX,GAKI,oBAAC,GAAD,OALJ,CADJ,EAQIoB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARJ;;AAWA,IAAIC,OAAO,CAACC,GAAR,CAAYC,cAAZ,IAA8B,mBAAmBC,SAArD,EAAgE;AAC5DC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AAClCF,IAAAA,SAAS,CAACG,aAAV,CACKC,QADL,CACcP,OAAO,CAACC,GAAR,CAAYC,cAD1B,EAEKM,IAFL,CAEUC,YAAY,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,YAA3C;AACH,KAJL,EAKKG,KALL,CAKWC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDE,KAApD;AACH,KAPL;AAQH,GATD;AAUH;;AAEDT,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC3B,EAAAA,KAAK,CAACoC,QAAN,CAAenC,GAAG,CAACoC,SAAJ,EAAf;AACH,CAFD;AAGAX,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,MAAM;AACrC3B,EAAAA,KAAK,CAACoC,QAAN,CAAenC,GAAG,CAACqC,UAAJ,EAAf;AACH,CAFD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { setContext } from 'apollo-link-context';\nimport { Util } from '@magento/peregrine';\n\nimport { Adapter } from 'src/drivers';\nimport store from 'src/store';\nimport app from 'src/actions/app';\nimport App from 'src/components/App';\nimport './index.css';\n\nconst { BrowserPersistence } = Util;\nconst apiBase = new URL('/graphql', location.origin).toString();\n\n/**\n * The Venia adapter provides basic context objects: a router, a store, a\n * GraphQL client, and some common functions. It is not opinionated about auth,\n * so we add an auth implementation here and prepend it to the Apollo Link list.\n */\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const storage = new BrowserPersistence();\n    // TODO: Get correct token expire time from API\n    const token = storage.getItem('signin_token');\n\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : ''\n        }\n    };\n});\n\nReactDOM.render(\n    <Adapter\n        apiBase={apiBase}\n        apollo={{ link: authLink.concat(Adapter.apolloLink(apiBase)) }}\n        store={store}\n    >\n        <App />\n    </Adapter>,\n    document.getElementById('root')\n);\n\nif (process.env.SERVICE_WORKER && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        navigator.serviceWorker\n            .register(process.env.SERVICE_WORKER)\n            .then(registration => {\n                console.log('Service worker registered: ', registration);\n            })\n            .catch(error => {\n                console.log('Service worker registration failed: ', error);\n            });\n    });\n}\n\nwindow.addEventListener('online', () => {\n    store.dispatch(app.setOnline());\n});\nwindow.addEventListener('offline', () => {\n    store.dispatch(app.setOffline());\n});\n"],"file":"index.js"}