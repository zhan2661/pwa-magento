{"version":3,"sources":["../../src/util/getRandomColor.js"],"names":["cache","Map","memoize","fn","key","has","get","set","getRandomColor","Array","from","length","Math","floor","random","join","memoizedGetRandomColor"],"mappings":"AAAA;AACA;AACA,MAAMA,KAAK,GAAG,IAAIC,GAAJ,EAAd;;AACA,MAAMC,OAAO,GAAGC,EAAE,IAAIC,GAAG,IACrBJ,KAAK,CAACK,GAAN,CAAUD,GAAV,IAAiBJ,KAAK,CAACM,GAAN,CAAUF,GAAV,CAAjB,GAAkCJ,KAAK,CAACO,GAAN,CAAUH,GAAV,EAAeD,EAAE,CAACC,GAAD,CAAjB,EAAwBE,GAAxB,CAA4BF,GAA5B,CADtC;;AAGA,MAAMI,cAAc,GAAG,MACnBC,KAAK,CAACC,IAAN,CAAW;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAX,EAA0B,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAhC,EAAiEC,IAAjE,CAAsE,GAAtE,CADJ;;AAGA,OAAO,MAAMC,sBAAsB,GAAGd,OAAO,CAACM,cAAD,CAAtC;AACP,eAAeA,cAAf","sourcesContent":["// TODO: replace with actual swatch colors or images from API\n// M2 GraphQL doesn't currently support them\nconst cache = new Map();\nconst memoize = fn => key =>\n    cache.has(key) ? cache.get(key) : cache.set(key, fn(key)).get(key);\n\nconst getRandomColor = () =>\n    Array.from({ length: 3 }, () => Math.floor(Math.random() * 255)).join(',');\n\nexport const memoizedGetRandomColor = memoize(getRandomColor);\nexport default getRandomColor;\n"],"file":"getRandomColor.js"}