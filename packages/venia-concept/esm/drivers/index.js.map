{"version":3,"sources":["../../src/drivers/index.js"],"names":["Query","Link","Redirect","Route","default","resourceUrl","Adapter","connect"],"mappings":"AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,QAAsC,kBAAtC;AACA,SAASC,OAAO,IAAIC,WAApB;AACA,SAASD,OAAO,IAAIE,OAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA","sourcesContent":["export { Query } from 'react-apollo';\nexport { Link, Redirect, Route } from 'react-router-dom';\nexport { default as resourceUrl } from '../util/makeUrl';\nexport { default as Adapter } from './adapter';\nexport { connect } from 'react-redux';\n\n/**\n * Venia components must be portable and consumable by projects which want to\n * use them individually. They must work independently of the Venia app at a\n * high level and a low level. This means that their dependencies which rely\n * on external objects, like Redux stores and GraphQL clients, must be modular\n * and encapsulated.\n *\n * ## Example (not real)\n *\n * ```jsx\n * import React, { Component } from 'react';\n * import { Link, resourceUrl } from '@magento/venia-drivers';\n *\n * export default function ProductThumbnail({ name, href, size, src }) {\n *   return (\n *     <Link to={resourceUrl(href)}>\n *       <img\n *         alt={name}\n *         src={resourceUrl(src, { type: 'image-product', size: 100 })}\n *       />\n *     </Link>\n *   );\n * }\n * ```\n *\n * Venia components build URLs based on assumptions about the local origin,\n * which are declared in venia-upward.yml. Nevertheless, third parties will use\n * Venia components outside of the app which defines those UPWARD requirements.\n *\n * Therefore, Venia uses the `resourceUrl()` function to generate all URLs, and\n * components consume it as an export of the drivers module. Consumers can\n * override `resourceUrl` and even use the original implementation by importing\n * directly from the non-aliased Venia module:\n *\n * ```js\n * import { resourceUrl as veniaResourceUrl } from '@magento/venia-concept/esm/drivers';\n *\n * const proxyBase = new URL('/proxy-to-store', window.location.origin);\n * export function resourceUrl(...args) {\n *   const url = veniaResourceUrl(...args);\n *   return URL(url, proxyBase);\n * }\n * ```\n *\n * To keep the code simple to read and write, Venia does not do runtime\n * dependency injection; instead, its code declares static dependencies on\n * this centralized module. This module collects these app-level dependencies\n * used throughout the app, so that a Venia consumer can inject alternate\n * components by configuring the module resolver in their build system.\n *\n * Because this is all one file, a third party can use a Venia component that\n * contains <Query> and <Link> elements, even without an Apollo client or\n * a React Router in context, simply by adding this Webpack config:\n *\n *     module: {\n *       alias: {\n *         \"@magento/venia-drivers\": \"./myReplacementDrivers\"\n *       }\n *     }\n */\n"],"file":"index.js"}