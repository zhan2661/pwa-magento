{"version":3,"sources":["../../../src/RootComponents/Product/Product.js"],"names":["React","Component","connect","Query","addItemToCart","loadingIndicator","ProductFullDetail","getUrlKey","productQuery","Product","item","quantity","guestCartId","props","componentDidMount","window","scrollTo","mapProduct","product","description","html","render","urlKey","onServer","loading","error","data","productDetail","items","mapDispatchToProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,EAAkBC,KAAlB;AACA,SAASC,aAAT;AACA,SAASC,gBAAT;AACA,OAAOC,iBAAP;AACA,OAAOC,SAAP;AACA,OAAOC,YAAP;AAEA;;;;;;;;AAOA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAAA;AAAA;;AAAA,uCAChB,OAAOS,IAAP,EAAaC,QAAb,KAA0B;AAClC,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACA,YAAM,KAAKA,KAAL,CAAWT,aAAX,CAAyB;AAAEQ,QAAAA,WAAF;AAAeF,QAAAA,IAAf;AAAqBC,QAAAA;AAArB,OAAzB,CAAN;AACH,KAJ2B;AAAA;;AAM5BG,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH,GAR2B,CAU5B;;;AACAC,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,OAAxB;AACA,6BACOA,OADP;AAEIC,MAAAA,WAAW,EACP,OAAOA,WAAP,KAAuB,QAAvB,GAAkCA,WAAW,CAACC,IAA9C,GAAqDD;AAH7D;AAKH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAEb,YADX;AAEI,MAAA,SAAS,EAAE;AAAEc,QAAAA,MAAM,EAAEf,SAAS,EAAnB;AAAuBgB,QAAAA,QAAQ,EAAE;AAAjC;AAFf,OAIK,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC3B,UAAID,KAAJ,EAAW,OAAO,oDAAP;AACX,UAAID,OAAJ,EAAa,OAAOnB,gBAAP;AAEb,YAAMa,OAAO,GAAGQ,IAAI,CAACC,aAAL,CAAmBC,KAAnB,CAAyB,CAAzB,CAAhB;AAEA,aACI,oBAAC,iBAAD;AACI,QAAA,OAAO,EAAE,KAAKX,UAAL,CAAgBC,OAAhB,CADb;AAEI,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWT;AAF1B,QADJ;AAMH,KAhBL,CADJ;AAoBH;;AAzC2B;;AA4ChC,MAAMyB,kBAAkB,GAAG;AACvBzB,EAAAA;AADuB,CAA3B;AAIA,eAAeF,OAAO,CAClB,IADkB,EAElB2B,kBAFkB,CAAP,CAGbpB,OAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { connect, Query } from 'src/drivers';\nimport { addItemToCart } from 'src/actions/cart';\nimport { loadingIndicator } from 'src/components/LoadingIndicator';\nimport ProductFullDetail from 'src/components/ProductFullDetail';\nimport getUrlKey from 'src/util/getUrlKey';\nimport productQuery from 'src/queries/getProductDetail.graphql';\n\n/**\n * As of this writing, there is no single Product query type in the M2.3 schema.\n * The recommended solution is to use filter criteria on a Products query.\n * However, the `id` argument is not supported. See\n * https://github.com/magento/graphql-ce/issues/86\n * TODO: Replace with a single product query when possible.\n */\nclass Product extends Component {\n    addToCart = async (item, quantity) => {\n        const { guestCartId } = this.props;\n        await this.props.addItemToCart({ guestCartId, item, quantity });\n    };\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    // map Magento 2.3.1 schema changes to Venia 2.0.0 proptype shape to maintain backwards compatibility\n    mapProduct(product) {\n        const { description } = product;\n        return {\n            ...product,\n            description:\n                typeof description === 'object' ? description.html : description\n        };\n    }\n\n    render() {\n        return (\n            <Query\n                query={productQuery}\n                variables={{ urlKey: getUrlKey(), onServer: false }}\n            >\n                {({ loading, error, data }) => {\n                    if (error) return <div>Data Fetch Error</div>;\n                    if (loading) return loadingIndicator;\n\n                    const product = data.productDetail.items[0];\n\n                    return (\n                        <ProductFullDetail\n                            product={this.mapProduct(product)}\n                            addToCart={this.props.addItemToCart}\n                        />\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    addItemToCart\n};\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Product);\n"],"file":"Product.js"}