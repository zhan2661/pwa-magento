{"version":3,"sources":["../../../src/RootComponents/Search/search.js"],"names":["React","Component","Query","Redirect","bool","func","object","shape","string","Gallery","classify","Icon","getQueryParameterValue","CloseIcon","loadingIndicator","defaultClasses","PRODUCT_SEARCH","getCategoryName","Search","categoryId","classes","categoryFilters","categoryFilter","handleClearCategoryFilter","categoryFilterText","id","loading","error","data","category","name","width","height","inputText","location","props","queryParameter","executeSearch","history","componentDidMount","searchOpen","toggleSearch","render","queryVariable","products","items","length","noResult","root","categoryTop","totalPages","total_count","gallery","isRequired","match"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,MAApC,QAAkD,YAAlD;AAGA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,OAAOC,IAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,gBAAT;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AAEA,MAAMC,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAQA,OAAO,MAAMC,MAAN,SAAqBjB,SAArB,CAA+B;AAAA;AAAA;;AAAA,6CA6BhB,CAACkB,UAAD,EAAaC,OAAb,KACd;AAAK,MAAA,SAAS,EAAEA,OAAO,CAACC;AAAxB,OACI;AACI,MAAA,SAAS,EAAED,OAAO,CAACE,cADvB;AAEI,MAAA,OAAO,EAAE,KAAKC;AAFlB,OAII;AAAO,MAAA,SAAS,EAAEH,OAAO,CAACI;AAA1B,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAEP,eADX;AAEI,MAAA,SAAS,EAAE;AAAEQ,QAAAA,EAAE,EAAEN;AAAN;AAFf,OAIK,CAAC;AAAEO,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC3B,UAAID,KAAJ,EAAW,OAAO,IAAP;AACX,UAAID,OAAJ,EAAa,OAAO,YAAP;AACb,aAAOE,IAAI,CAACC,QAAL,CAAcC,IAArB;AACH,KARL,CADJ,CAJJ,EAgBI,oBAAC,IAAD;AACI,MAAA,GAAG,EAAEjB,SADT;AAEI,MAAA,KAAK,EAAE;AACHkB,QAAAA,KAAK,EAAE,MADJ;AAEHC,QAAAA,MAAM,EAAE;AAFL;AAFX,MAhBJ,CADJ,CA9B8B;;AAAA,uDA0DN,MAAM;AAC9B,YAAMC,SAAS,GAAGrB,sBAAsB,CAAC;AACrCsB,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QADgB;AAErCE,QAAAA,cAAc,EAAE;AAFqB,OAAD,CAAxC;;AAKA,UAAIH,SAAJ,EAAe;AACX,aAAKE,KAAL,CAAWE,aAAX,CAAyBJ,SAAzB,EAAoC,KAAKE,KAAL,CAAWG,OAA/C;AACH;AACJ,KAnEiC;AAAA;;AAelCC,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAM;AAAEL,MAAAA,QAAF;AAAYM,MAAAA,UAAZ;AAAwBC,MAAAA;AAAxB,QAAyC,KAAKN,KAApD;AAEA,UAAMF,SAAS,GAAGrB,sBAAsB,CAAC;AACrCsB,MAAAA,QADqC;AAErCE,MAAAA,cAAc,EAAE;AAFqB,KAAD,CAAxC;;AAKA,QAAIK,YAAY,IAAI,CAACD,UAAjB,IAA+BP,SAAnC,EAA8C;AAC1CQ,MAAAA,YAAY;AACf;AACJ;;AA0CDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEtB,MAAAA,OAAF;AAAWc,MAAAA;AAAX,QAAwB,KAAKC,KAAnC;AACA,UAAM;AAAElB,MAAAA;AAAF,QAAsB,IAA5B;AAEA,UAAMgB,SAAS,GAAGrB,sBAAsB,CAAC;AACrCsB,MAAAA,QADqC;AAErCE,MAAAA,cAAc,EAAE;AAFqB,KAAD,CAAxC;AAIA,UAAMjB,UAAU,GAAGP,sBAAsB,CAAC;AACtCsB,MAAAA,QADsC;AAEtCE,MAAAA,cAAc,EAAE;AAFsB,KAAD,CAAzC;;AAKA,QAAI,CAACH,SAAL,EAAgB;AACZ,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb,QAAP;AACH;;AAED,UAAMU,aAAa,GAAGxB,UAAU,GAC1B;AAAEc,MAAAA,SAAF;AAAad,MAAAA;AAAb,KAD0B,GAE1B;AAAEc,MAAAA;AAAF,KAFN;AAIA,WACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,cAAd;AAA8B,MAAA,SAAS,EAAE2B;AAAzC,OACK,CAAC;AAAEjB,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC3B,UAAID,KAAJ,EAAW,OAAO,oDAAP;AACX,UAAID,OAAJ,EAAa,OAAOZ,gBAAP;AAEb,UAAIc,IAAI,CAACgB,QAAL,CAAcC,KAAd,CAAoBC,MAApB,KAA+B,CAAnC,EACI,OACI;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAAC2B;AAAxB,6BADJ;AAMJ,aACI;AAAS,QAAA,SAAS,EAAE3B,OAAO,CAAC4B;AAA5B,SACI;AAAK,QAAA,SAAS,EAAE5B,OAAO,CAAC6B;AAAxB,SACI;AAAK,QAAA,SAAS,EAAE7B,OAAO,CAAC8B;AAAxB,SACKtB,IAAI,CAACgB,QAAL,CAAcO,WADnB,YACsC,GADtC,CADJ,EAIKhC,UAAU,IACPF,eAAe,CAACE,UAAD,EAAaC,OAAb,CALvB,CADJ,EAQI;AAAS,QAAA,SAAS,EAAEA,OAAO,CAACgC;AAA5B,SACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAExB,IAAI,CAACgB,QAAL,CAAcC;AAA7B,QADJ,CARJ,CADJ;AAcH,KA1BL,CADJ;AA8BH;;AAxHiC;;gBAAzB3B,M,eACU;AACfE,EAAAA,OAAO,EAAEb,KAAK,CAAC;AACXwC,IAAAA,QAAQ,EAAEvC,MADC;AAEXwC,IAAAA,IAAI,EAAExC,MAFK;AAGX0C,IAAAA,UAAU,EAAE1C;AAHD,GAAD,CADC;AAMf6B,EAAAA,aAAa,EAAEhC,IAAI,CAACgD,UANL;AAOff,EAAAA,OAAO,EAAEhC,MAPM;AAQf4B,EAAAA,QAAQ,EAAE5B,MAAM,CAAC+C,UARF;AASfC,EAAAA,KAAK,EAAEhD,MATQ;AAUfkC,EAAAA,UAAU,EAAEpC,IAVG;AAWfqC,EAAAA,YAAY,EAAEpC;AAXC,C;;AA0HvB,eAAeK,QAAQ,CAACK,cAAD,CAAR,CAAyBG,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Query, Redirect } from 'src/drivers';\nimport { bool, func, object, shape, string } from 'prop-types';\nimport gql from 'graphql-tag';\n\nimport Gallery from 'src/components/Gallery';\nimport classify from 'src/classify';\nimport Icon from 'src/components/Icon';\nimport getQueryParameterValue from 'src/util/getQueryParameterValue';\nimport CloseIcon from 'react-feather/dist/icons/x';\nimport { loadingIndicator } from 'src/components/LoadingIndicator';\nimport defaultClasses from './search.css';\nimport PRODUCT_SEARCH from '../../queries/productSearch.graphql';\n\nconst getCategoryName = gql`\n    query getCategoryName($id: Int!) {\n        category(id: $id) {\n            name\n        }\n    }\n`;\n\nexport class Search extends Component {\n    static propTypes = {\n        classes: shape({\n            noResult: string,\n            root: string,\n            totalPages: string\n        }),\n        executeSearch: func.isRequired,\n        history: object,\n        location: object.isRequired,\n        match: object,\n        searchOpen: bool,\n        toggleSearch: func\n    };\n\n    componentDidMount() {\n        // Ensure that search is open when the user lands on the search page.\n        const { location, searchOpen, toggleSearch } = this.props;\n\n        const inputText = getQueryParameterValue({\n            location,\n            queryParameter: 'query'\n        });\n\n        if (toggleSearch && !searchOpen && inputText) {\n            toggleSearch();\n        }\n    }\n\n    getCategoryName = (categoryId, classes) => (\n        <div className={classes.categoryFilters}>\n            <button\n                className={classes.categoryFilter}\n                onClick={this.handleClearCategoryFilter}\n            >\n                <small className={classes.categoryFilterText}>\n                    <Query\n                        query={getCategoryName}\n                        variables={{ id: categoryId }}\n                    >\n                        {({ loading, error, data }) => {\n                            if (error) return null;\n                            if (loading) return 'Loading...';\n                            return data.category.name;\n                        }}\n                    </Query>\n                </small>\n                <Icon\n                    src={CloseIcon}\n                    attrs={{\n                        width: '13px',\n                        height: '13px'\n                    }}\n                />\n            </button>\n        </div>\n    );\n\n    handleClearCategoryFilter = () => {\n        const inputText = getQueryParameterValue({\n            location: this.props.location,\n            queryParameter: 'query'\n        });\n\n        if (inputText) {\n            this.props.executeSearch(inputText, this.props.history);\n        }\n    };\n\n    render() {\n        const { classes, location } = this.props;\n        const { getCategoryName } = this;\n\n        const inputText = getQueryParameterValue({\n            location,\n            queryParameter: 'query'\n        });\n        const categoryId = getQueryParameterValue({\n            location,\n            queryParameter: 'category'\n        });\n\n        if (!inputText) {\n            return <Redirect to=\"/\" />;\n        }\n\n        const queryVariable = categoryId\n            ? { inputText, categoryId }\n            : { inputText };\n\n        return (\n            <Query query={PRODUCT_SEARCH} variables={queryVariable}>\n                {({ loading, error, data }) => {\n                    if (error) return <div>Data Fetch Error</div>;\n                    if (loading) return loadingIndicator;\n\n                    if (data.products.items.length === 0)\n                        return (\n                            <div className={classes.noResult}>\n                                No results found!\n                            </div>\n                        );\n\n                    return (\n                        <article className={classes.root}>\n                            <div className={classes.categoryTop}>\n                                <div className={classes.totalPages}>\n                                    {data.products.total_count} items{' '}\n                                </div>\n                                {categoryId &&\n                                    getCategoryName(categoryId, classes)}\n                            </div>\n                            <section className={classes.gallery}>\n                                <Gallery data={data.products.items} />\n                            </section>\n                        </article>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(Search);\n"],"file":"search.js"}