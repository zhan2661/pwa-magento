{"version":3,"sources":["../../../src/components/CreateAccount/createAccount.js"],"names":["React","Component","func","shape","string","Form","classify","Button","ErrorDisplay","Field","TextInput","asyncValidators","validators","defaultClasses","CreateAccount","values","onSubmit","props","initialValues","email","firstName","lastName","rest","customer","firstname","lastname","render","handleSubmit","classes","createAccountError","root","lead","get","actions","error","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { func, shape, string } from 'prop-types';\nimport { Form } from 'informed';\n\nimport classify from 'src/classify';\nimport Button from 'src/components/Button';\nimport ErrorDisplay from 'src/components/ErrorDisplay';\nimport Field from 'src/components/Field';\nimport TextInput from 'src/components/TextInput';\nimport { asyncValidators, validators } from './validators';\nimport defaultClasses from './createAccount.css';\n\nclass CreateAccount extends Component {\n    static propTypes = {\n        classes: shape({\n            error: string,\n            root: string\n        }),\n        createAccountError: shape({\n            message: string\n        }),\n        initialValues: shape({\n            email: string,\n            firstName: string,\n            lastName: string\n        }),\n        onSubmit: func\n    };\n\n    static defaultProps = {\n        initialValues: {}\n    };\n\n    get initialValues() {\n        const { initialValues } = this.props;\n        const { email, firstName, lastName, ...rest } = initialValues;\n\n        return {\n            customer: { email, firstname: firstName, lastname: lastName },\n            ...rest\n        };\n    }\n\n    handleSubmit = values => {\n        const { onSubmit } = this.props;\n\n        if (typeof onSubmit === 'function') {\n            onSubmit(values);\n        }\n    };\n\n    render() {\n        const { handleSubmit, initialValues, props } = this;\n        const { classes, createAccountError } = props;\n\n        return (\n            <Form\n                className={classes.root}\n                initialValues={initialValues}\n                onSubmit={handleSubmit}\n            >\n                <h3 className={classes.lead}>\n                    {'An account gives you access to rewards!'}\n                </h3>\n                <Field label=\"Email\">\n                    <TextInput\n                        field=\"customer.email\"\n                        autoComplete=\"email\"\n                        validate={validators.get('email')}\n                        asyncValidate={asyncValidators.get('email')}\n                        validateOnBlur\n                        asyncValidateOnBlur\n                    />\n                </Field>\n                <Field label=\"First Name\">\n                    <TextInput\n                        field=\"customer.firstname\"\n                        autoComplete=\"given-name\"\n                        validate={validators.get('firstName')}\n                        validateOnBlur\n                    />\n                </Field>\n                <Field label=\"Last Name\">\n                    <TextInput\n                        field=\"customer.lastname\"\n                        autoComplete=\"family-name\"\n                        validate={validators.get('lastName')}\n                        validateOnBlur\n                    />\n                </Field>\n                <Field label=\"Password\">\n                    <TextInput\n                        field=\"password\"\n                        type=\"password\"\n                        autoComplete=\"new-password\"\n                        validate={validators.get('password')}\n                        validateOnBlur\n                    />\n                </Field>\n                <Field label=\"Confirm Password\">\n                    <TextInput\n                        field=\"confirm\"\n                        type=\"password\"\n                        validate={validators.get('confirm')}\n                        validateOnBlur\n                    />\n                </Field>\n                <ErrorDisplay error={createAccountError} />\n                <div className={classes.actions}>\n                    <Button type=\"submit\" priority=\"high\">\n                        {'Submit'}\n                    </Button>\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(CreateAccount);\n"],"file":"createAccount.js"}