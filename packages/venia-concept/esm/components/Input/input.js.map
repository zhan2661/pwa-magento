{"version":3,"sources":["../../../src/components/Input/input.js"],"names":["React","Component","PropTypes","defaultClasses","classify","Text","HelpTypes","hint","error","success","Input","value","props","initialValue","focused","dirty","event","setState","target","onChange","makeDirty","state","componentDidMount","helpText","helpVisible","classes","helpType","helpTypeClass","labelText","label","className","labelFocused","rootClass","root","rootFocused","requiredSymbol","required","render","placeholder","type","disabled","title","autoComplete","field","input","handleChange","focusTextInput","blurTextInput","shape","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport defaultClasses from './input.css';\nimport classify from 'src/classify';\nimport { Text } from 'informed';\n\nexport const HelpTypes = {\n    hint: 'hint',\n    error: 'error',\n    success: 'success'\n};\n\nclass Input extends Component {\n    static propTypes = {\n        classes: PropTypes.shape({\n            helpText: PropTypes.string,\n            hint: PropTypes.string,\n            error: PropTypes.string,\n            success: PropTypes.string,\n            label: PropTypes.string,\n            labelFocused: PropTypes.string,\n            root: PropTypes.string,\n            input: PropTypes.string,\n            rootFocused: PropTypes.string\n        }),\n\n        initialValue: PropTypes.string,\n        placeholder: PropTypes.string,\n        label: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        disabled: PropTypes.bool,\n        required: PropTypes.bool,\n        title: PropTypes.string,\n        autoComplete: PropTypes.string,\n        helpText: PropTypes.string,\n        helpType: PropTypes.string,\n        field: PropTypes.string.isRequired,\n        onChange: PropTypes.func\n    };\n\n    static defaultProps = {\n        disabled: false,\n        helpVisible: true,\n        helpType: HelpTypes.hint\n    };\n\n    componentDidMount() {\n        const { initialValue, onChange } = this.props;\n\n        if (initialValue && onChange) {\n            onChange(initialValue);\n        }\n    }\n\n    state = {\n        value: this.props.initialValue,\n        focused: false,\n        dirty: false\n    };\n\n    get helpText() {\n        const { helpVisible, classes, helpText, helpType } = this.props;\n        const helpTypeClass = `${classes.helpText} ${classes[helpType]}`;\n\n        return helpVisible ? (\n            <div className={helpTypeClass}>{helpText}</div>\n        ) : null;\n    }\n\n    get labelText() {\n        const { classes, label } = this.props;\n        let className = `${classes.label}`;\n        if (this.state.focused) {\n            className += ` ${classes.labelFocused}`;\n        }\n        return <span className={className}>{label}</span>;\n    }\n\n    get rootClass() {\n        const { classes } = this.props;\n        let className = `${classes.root}`;\n        if (this.state.focused) {\n            className += ` ${classes.rootFocused}`;\n        }\n        return className;\n    }\n\n    get requiredSymbol() {\n        const { classes, required } = this.props;\n        return required ? <div className={classes.requiredSymbol} /> : null;\n    }\n\n    render() {\n        const { helpText, labelText, requiredSymbol, rootClass } = this;\n        const {\n            classes,\n            placeholder,\n            type,\n            disabled,\n            required,\n            title,\n            initialValue\n        } = this.props;\n        let { autoComplete, field } = this.props;\n\n        if (!this.state.dirty) {\n            field = initialValue ? initialValue : field;\n        }\n        autoComplete = !autoComplete ? 'off' : autoComplete;\n\n        return (\n            <div className={rootClass}>\n                <span className={classes.label}>\n                    {requiredSymbol}&nbsp;{labelText}\n                </span>\n                <Text\n                    initialValue={initialValue}\n                    className={classes.input}\n                    placeholder={placeholder}\n                    type={type}\n                    disabled={disabled}\n                    required={required}\n                    title={title}\n                    autoComplete={autoComplete}\n                    onChange={this.handleChange}\n                    onFocus={this.focusTextInput}\n                    onBlur={this.blurTextInput}\n                    field={field}\n                />\n                {helpText}\n            </div>\n        );\n    }\n\n    handleChange = event => {\n        this.setState({ value: event.target.value });\n        this.props.onChange ? this.props.onChange(event.target.value) : null;\n        this.makeDirty();\n    };\n\n    focusTextInput = () => {\n        this.setState({ focused: true });\n    };\n\n    blurTextInput = () => {\n        this.setState({ focused: false });\n    };\n\n    makeDirty = () => {\n        if (!this.state.dirty) {\n            this.setState({ dirty: true });\n        }\n    };\n}\n\nexport default classify(defaultClasses)(Input);\n"],"file":"input.js"}