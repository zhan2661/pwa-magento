{"version":3,"sources":["../../../src/components/Checkbox/checkbox.js"],"names":["React","Component","Fragment","bool","node","shape","string","BasicCheckbox","asField","compose","classify","Message","Icon","CheckIcon","defaultClasses","Checkbox","render","props","classes","fieldState","id","label","message","rest","value","checked","root","icon","input","field","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,YAA1C;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,UAAvC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,OAAOC,QAAP;AACA,SAASC,OAAT;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP;AAEA;;AACA;;AAEA,OAAO,MAAMC,QAAN,SAAuBd,SAAvB,CAAiC;AAkBpCe,EAAAA,MAAM,GAAG;AACL,wBAA6D,KAAKC,KAAlE;AAAA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA,EAAvB;AAA2BC,MAAAA,KAA3B;AAAkCC,MAAAA;AAAlC,KAAN;AAAA,UAAoDC,IAApD;;AACA,UAAM;AAAEC,MAAAA,KAAK,EAAEC;AAAT,QAAqBN,UAA3B;AAEA,WACI,oBAAC,QAAD,QACI;AAAO,MAAA,SAAS,EAAED,OAAO,CAACQ,IAA1B;AAAgC,MAAA,OAAO,EAAEN;AAAzC,OACI;AAAM,MAAA,SAAS,EAAEF,OAAO,CAACS;AAAzB,OACKF,OAAO,IAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEZ,SAAX;AAAsB,MAAA,IAAI,EAAE;AAA5B,MADhB,CADJ,EAII,oBAAC,aAAD,eACQU,IADR;AAEI,MAAA,SAAS,EAAEL,OAAO,CAACU,KAFvB;AAGI,MAAA,UAAU,EAAET,UAHhB;AAII,MAAA,EAAE,EAAEC;AAJR,OAJJ,EAUI;AAAM,MAAA,SAAS,EAAEF,OAAO,CAACG;AAAzB,OAAiCA,KAAjC,CAVJ,CADJ,EAaI,oBAAC,OAAD;AAAS,MAAA,UAAU,EAAEF;AAArB,OAAkCG,OAAlC,CAbJ,CADJ;AAiBH;;AAvCmC;AA0CxC;;gBA1CaP,Q,eACU;AACfG,EAAAA,OAAO,EAAEb,KAAK,CAAC;AACXsB,IAAAA,IAAI,EAAErB,MADK;AAEXsB,IAAAA,KAAK,EAAEtB,MAFI;AAGXe,IAAAA,KAAK,EAAEf,MAHI;AAIXgB,IAAAA,OAAO,EAAEhB,MAJE;AAKXoB,IAAAA,IAAI,EAAEpB;AALK,GAAD,CADC;AAQfuB,EAAAA,KAAK,EAAEvB,MAAM,CAACwB,UARC;AASfX,EAAAA,UAAU,EAAEd,KAAK,CAAC;AACdmB,IAAAA,KAAK,EAAErB;AADO,GAAD,CAAL,CAET2B,UAXY;AAYfV,EAAAA,EAAE,EAAEd,MAZW;AAafe,EAAAA,KAAK,EAAEjB,IAAI,CAAC0B,UAbG;AAcfR,EAAAA,OAAO,EAAElB;AAdM,C;;AA2CvB,eAAeK,OAAO,CAClBC,QAAQ,CAACI,cAAD,CADU,EAElBN,OAFkB,CAAP,CAGbO,QAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { bool, node, shape, string } from 'prop-types';\nimport { BasicCheckbox, asField } from 'informed';\nimport { compose } from 'redux';\n\nimport classify from 'src/classify';\nimport { Message } from 'src/components/Field';\nimport Icon from 'src/components/Icon';\nimport CheckIcon from 'react-feather/dist/icons/check';\nimport defaultClasses from './checkbox.css';\n\n/* TODO: change lint config to use `label-has-associated-control` */\n/* eslint-disable jsx-a11y/label-has-for */\n\nexport class Checkbox extends Component {\n    static propTypes = {\n        classes: shape({\n            icon: string,\n            input: string,\n            label: string,\n            message: string,\n            root: string\n        }),\n        field: string.isRequired,\n        fieldState: shape({\n            value: bool\n        }).isRequired,\n        id: string,\n        label: node.isRequired,\n        message: node\n    };\n\n    render() {\n        const { classes, fieldState, id, label, message, ...rest } = this.props;\n        const { value: checked } = fieldState;\n\n        return (\n            <Fragment>\n                <label className={classes.root} htmlFor={id}>\n                    <span className={classes.icon}>\n                        {checked && <Icon src={CheckIcon} size={18} />}\n                    </span>\n                    <BasicCheckbox\n                        {...rest}\n                        className={classes.input}\n                        fieldState={fieldState}\n                        id={id}\n                    />\n                    <span className={classes.label}>{label}</span>\n                </label>\n                <Message fieldState={fieldState}>{message}</Message>\n            </Fragment>\n        );\n    }\n}\n\n/* eslint-enable jsx-a11y/label-has-for */\n\nexport default compose(\n    classify(defaultClasses),\n    asField\n)(Checkbox);\n"],"file":"checkbox.js"}