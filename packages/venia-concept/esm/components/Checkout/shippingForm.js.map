{"version":3,"sources":["../../../src/components/Checkout/shippingForm.js"],"names":["React","Component","Form","array","bool","func","shape","string","Button","Label","Select","classify","defaultClasses","ShippingForm","props","cancel","shippingMethod","selectedShippingMethod","availableShippingMethods","find","carrier_code","console","warn","submit","render","classes","submitting","initialValue","selectableShippingMethods","length","map","carrier_title","label","value","root","body","heading","footer","button","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form } from 'informed';\nimport { array, bool, func, shape, string } from 'prop-types';\n\nimport Button from 'src/components/Button';\nimport Label from './label';\nimport Select from 'src/components/Select';\n\nimport classify from 'src/classify';\nimport defaultClasses from './shippingForm.css';\n\nclass ShippingForm extends Component {\n    static propTypes = {\n        availableShippingMethods: array.isRequired,\n        cancel: func.isRequired,\n        classes: shape({\n            body: string,\n            button: string,\n            footer: string,\n            heading: string,\n            shippingMethod: string\n        }),\n        shippingMethod: string,\n        submit: func.isRequired,\n        submitting: bool\n    };\n\n    static defaultProps = {\n        availableShippingMethods: [{}]\n    };\n\n    render() {\n        const {\n            availableShippingMethods,\n            classes,\n            shippingMethod,\n            submitting\n        } = this.props;\n\n        let initialValue;\n        let selectableShippingMethods;\n\n        if (availableShippingMethods.length) {\n            selectableShippingMethods = availableShippingMethods.map(\n                ({ carrier_code, carrier_title }) => ({\n                    label: carrier_title,\n                    value: carrier_code\n                })\n            );\n            initialValue =\n                shippingMethod || availableShippingMethods[0].carrier_code;\n        } else {\n            selectableShippingMethods = [];\n            initialValue = '';\n        }\n\n        return (\n            <Form className={classes.root} onSubmit={this.submit}>\n                <div className={classes.body}>\n                    <h2 className={classes.heading}>Shipping Information</h2>\n                    <div className={classes.shippingMethod}>\n                        <Label htmlFor={classes.shippingMethod}>\n                            Shipping Method\n                        </Label>\n                        <Select\n                            field=\"shippingMethod\"\n                            initialValue={initialValue}\n                            items={selectableShippingMethods}\n                        />\n                    </div>\n                </div>\n                <div className={classes.footer}>\n                    <Button className={classes.button} onClick={this.cancel}>\n                        Cancel\n                    </Button>\n                    <Button\n                        className={classes.button}\n                        priority=\"high\"\n                        type=\"submit\"\n                        disabled={submitting}\n                    >\n                        Use Method\n                    </Button>\n                </div>\n            </Form>\n        );\n    }\n\n    cancel = () => {\n        this.props.cancel();\n    };\n\n    submit = ({ shippingMethod }) => {\n        const selectedShippingMethod = this.props.availableShippingMethods.find(\n            ({ carrier_code }) => carrier_code === shippingMethod\n        );\n\n        if (!selectedShippingMethod) {\n            console.warn(\n                `Could not find the selected shipping method ${selectedShippingMethod} in the list of available shipping methods.`\n            );\n            this.cancel();\n            return;\n        }\n\n        this.props.submit({ shippingMethod: selectedShippingMethod });\n    };\n}\n\nexport default classify(defaultClasses)(ShippingForm);\n"],"file":"shippingForm.js"}