{"version":3,"sources":["../../../src/components/Checkout/wrapper.js"],"names":["React","Component","connect","array","bool","func","object","oneOf","shape","string","beginCheckout","cancelCheckout","editOrder","submitShippingAddress","submitOrder","submitPaymentMethodAndBillingAddress","submitShippingMethod","Flow","hasData","value","isCartReady","cart","details","items_count","isCheckoutReady","checkout","billingAddress","paymentData","shippingAddress","shippingMethod","every","CheckoutWrapper","render","directory","requestOrder","props","actions","availableShippingMethods","miscProps","hasPaymentMethod","hasShippingAddress","hasShippingMethod","flowProps","isRequired","guestCartId","totals","city","country_id","email","firstname","lastname","postcode","region_id","region_code","region","street","telephone","editing","incorrectAddressMessage","isAddressIncorrect","paymentCode","description","cardType","nonce","shippingTitle","step","submitting","countries","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'src/drivers';\nimport { array, bool, func, object, oneOf, shape, string } from 'prop-types';\n\nimport {\n    beginCheckout,\n    cancelCheckout,\n    editOrder,\n    submitShippingAddress,\n    submitOrder,\n    submitPaymentMethodAndBillingAddress,\n    submitShippingMethod\n} from 'src/actions/checkout';\n\nimport Flow from './flow';\n\nconst hasData = value => !!value;\nconst isCartReady = cart => cart.details.items_count > 0;\nconst isCheckoutReady = checkout => {\n    const {\n        billingAddress,\n        paymentData,\n        shippingAddress,\n        shippingMethod\n    } = checkout;\n\n    return [billingAddress, paymentData, shippingAddress, shippingMethod].every(\n        hasData\n    );\n};\n\nexport class CheckoutWrapper extends Component {\n    static propTypes = {\n        beginCheckout: func,\n        cancelCheckout: func,\n        cart: shape({\n            details: object.isRequired,\n            guestCartId: string,\n            totals: object\n        }).isRequired,\n        checkout: shape({\n            availableShippingMethods: array,\n            billingAddress: shape({\n                city: string,\n                country_id: string,\n                email: string,\n                firstname: string,\n                lastname: string,\n                postcode: string,\n                region_id: string,\n                region_code: string,\n                region: string,\n                street: array,\n                telephone: string\n            }),\n            editing: oneOf(['address', 'paymentMethod', 'shippingMethod']),\n            incorrectAddressMessage: string,\n            isAddressIncorrect: bool,\n            paymentCode: string,\n            paymentData: shape({\n                description: string,\n                details: shape({\n                    cardType: string\n                }),\n                nonce: string\n            }),\n            shippingAddress: shape({\n                city: string,\n                country_id: string,\n                email: string,\n                firstname: string,\n                lastname: string,\n                postcode: string,\n                region_id: string,\n                region_code: string,\n                region: string,\n                street: array,\n                telephone: string\n            }),\n            shippingMethod: string,\n            shippingTitle: string,\n            step: oneOf(['cart', 'form', 'receipt']).isRequired,\n            submitting: bool.isRequired\n        }),\n        directory: shape({\n            countries: array\n        }),\n        editOrder: func,\n        submitShippingAddress: func,\n        submitOrder: func,\n        submitPaymentMethodAndBillingAddress: func,\n        submitShippingMethod: func\n    };\n\n    render() {\n        const {\n            beginCheckout,\n            cancelCheckout,\n            cart,\n            checkout,\n            directory,\n            editOrder,\n            requestOrder,\n            submitShippingAddress,\n            submitOrder,\n            submitPaymentMethodAndBillingAddress,\n            submitShippingMethod\n        } = this.props;\n\n        // ensure state slices are present\n        if (!(cart && checkout)) {\n            return null;\n        }\n\n        const actions = {\n            beginCheckout,\n            cancelCheckout,\n            editOrder,\n            requestOrder,\n            submitShippingAddress,\n            submitOrder,\n            submitPaymentMethodAndBillingAddress,\n            submitShippingMethod\n        };\n\n        const {\n            availableShippingMethods,\n            paymentData,\n            shippingAddress,\n            shippingMethod\n        } = checkout;\n\n        const miscProps = {\n            availableShippingMethods,\n            hasPaymentMethod: hasData(paymentData),\n            hasShippingAddress: hasData(shippingAddress),\n            hasShippingMethod: hasData(shippingMethod),\n            isCartReady: isCartReady(cart),\n            isCheckoutReady: isCheckoutReady(checkout)\n        };\n\n        const flowProps = { actions, cart, checkout, directory, ...miscProps };\n\n        return <Flow {...flowProps} />;\n    }\n}\n\nconst mapStateToProps = ({ cart, checkout, directory }) => ({\n    cart,\n    checkout,\n    directory\n});\n\nconst mapDispatchToProps = {\n    beginCheckout,\n    cancelCheckout,\n    editOrder,\n    submitShippingAddress,\n    submitOrder,\n    submitPaymentMethodAndBillingAddress,\n    submitShippingMethod\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CheckoutWrapper);\n"],"file":"wrapper.js"}