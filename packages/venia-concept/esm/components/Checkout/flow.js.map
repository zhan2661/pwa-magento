{"version":3,"sources":["../../../src/components/Checkout/flow.js"],"names":["React","Component","array","bool","func","object","oneOf","shape","string","classify","Cart","Form","Receipt","defaultClasses","Flow","child","actions","cart","checkout","hasPaymentMethod","hasShippingAddress","hasShippingMethod","directory","isCartReady","isCheckoutReady","props","beginCheckout","cancelCheckout","editOrder","submitShippingAddress","submitOrder","submitPaymentMethodAndBillingAddress","submitShippingMethod","availableShippingMethods","billingAddress","editing","isAddressIncorrect","incorrectAddressMessage","paymentData","shippingAddress","shippingMethod","shippingTitle","step","submitting","stepProps","ready","render","classes","root","isRequired","details","guestCartId","totals","city","country_id","email","firstname","lastname","postcode","region_id","region_code","region","street","telephone","paymentCode","description","cardType","nonce","countries"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { array, bool, func, object, oneOf, shape, string } from 'prop-types';\n\nimport classify from 'src/classify';\nimport Cart from './cart';\nimport Form from './form';\nimport Receipt from './Receipt';\nimport defaultClasses from './flow.css';\n\nclass Flow extends Component {\n    static propTypes = {\n        actions: shape({\n            beginCheckout: func,\n            cancelCheckout: func,\n            editOrder: func,\n            submitShippingAddress: func,\n            submitOrder: func,\n            submitPaymentMethodAndBillingAddress: func,\n            submitShippingMethod: func\n        }).isRequired,\n        cart: shape({\n            details: object,\n            guestCartId: string,\n            totals: object\n        }),\n        checkout: shape({\n            availableShippingMethods: array,\n            billingAddress: shape({\n                city: string,\n                country_id: string,\n                email: string,\n                firstname: string,\n                lastname: string,\n                postcode: string,\n                region_id: string,\n                region_code: string,\n                region: string,\n                street: array,\n                telephone: string\n            }),\n            editing: oneOf(['address', 'paymentMethod', 'shippingMethod']),\n            incorrectAddressMessage: string,\n            isAddressIncorrect: bool,\n            paymentCode: string,\n            paymentData: shape({\n                description: string,\n                details: shape({\n                    cardType: string\n                }),\n                nonce: string\n            }),\n            shippingAddress: shape({\n                city: string,\n                country_id: string,\n                email: string,\n                firstname: string,\n                lastname: string,\n                postcode: string,\n                region_id: string,\n                region_code: string,\n                region: string,\n                street: array,\n                telephone: string\n            }),\n            shippingMethod: string,\n            shippingTitle: string,\n            step: oneOf(['cart', 'form', 'receipt']).isRequired,\n            submitting: bool\n        }).isRequired,\n        directory: shape({\n            countries: array\n        }),\n        classes: shape({\n            root: string\n        }),\n        hasPaymentMethod: bool,\n        hasShippingAddress: bool,\n        hasShippingMethod: bool,\n        isCartReady: bool,\n        isCheckoutReady: bool,\n        paymentData: shape({\n            description: string,\n            details: shape({\n                cardType: string\n            }),\n            nonce: string\n        }),\n        shippingMethod: string,\n        shippingTitle: string\n    };\n\n    get child() {\n        const {\n            actions,\n            cart,\n            checkout,\n            hasPaymentMethod,\n            hasShippingAddress,\n            hasShippingMethod,\n            directory,\n            isCartReady,\n            isCheckoutReady\n        } = this.props;\n\n        const {\n            beginCheckout,\n            cancelCheckout,\n            editOrder,\n            submitShippingAddress,\n            submitOrder,\n            submitPaymentMethodAndBillingAddress,\n            submitShippingMethod\n        } = actions;\n\n        const {\n            availableShippingMethods,\n            billingAddress,\n            editing,\n            isAddressIncorrect,\n            incorrectAddressMessage,\n            paymentData,\n            shippingAddress,\n            shippingMethod,\n            shippingTitle,\n            step,\n            submitting\n        } = checkout;\n\n        switch (step) {\n            case 'cart': {\n                const stepProps = {\n                    beginCheckout,\n                    ready: isCartReady,\n                    submitting\n                };\n\n                return <Cart {...stepProps} />;\n            }\n            case 'form': {\n                const stepProps = {\n                    availableShippingMethods,\n                    billingAddress,\n                    cancelCheckout,\n                    cart,\n                    directory,\n                    editOrder,\n                    editing,\n                    hasPaymentMethod,\n                    hasShippingAddress,\n                    hasShippingMethod,\n                    incorrectAddressMessage,\n                    isAddressIncorrect,\n                    paymentData,\n                    ready: isCheckoutReady,\n                    shippingAddress,\n                    shippingMethod,\n                    shippingTitle,\n                    submitShippingAddress,\n                    submitOrder,\n                    submitPaymentMethodAndBillingAddress,\n                    submitShippingMethod,\n                    submitting\n                };\n\n                return <Form {...stepProps} />;\n            }\n            case 'receipt': {\n                return <Receipt />;\n            }\n            default: {\n                return null;\n            }\n        }\n    }\n\n    render() {\n        const { child, props } = this;\n        const { classes } = props;\n\n        return <div className={classes.root}>{child}</div>;\n    }\n}\n\nexport default classify(defaultClasses)(Flow);\n"],"file":"flow.js"}