{"version":3,"sources":["../../../src/components/Checkout/form.js"],"names":["React","Component","Fragment","array","bool","func","object","oneOf","shape","string","Price","AddressForm","PaymentsForm","Section","ShippingForm","SubmitButton","classify","Button","defaultClasses","Form","props","cancelCheckout","editOrder","formValues","submitShippingAddress","type","submitPaymentMethodAndBillingAddress","submitShippingMethod","editableForm","editing","submitting","isAddressIncorrect","incorrectAddressMessage","directory","countries","shippingAddress","stopEditing","billingAddress","availableShippingMethods","shippingMethod","overview","cart","classes","hasPaymentMethod","hasShippingAddress","hasShippingMethod","ready","submitOrder","body","editAddress","shippingAddressSummary","editPaymentMethod","paymentMethodSummary","editShippingMethod","shippingMethodSummary","totals","quote_currency_code","subtotal","details","items_qty","footer","dismissCheckout","paymentData","informationPrompt","primaryDisplay","secondaryDisplay","cardType","description","paymentDisplayPrimary","paymentDisplaySecondary","name","firstname","lastname","street","join","shippingTitle","render","children","root","city","country_id","email","postcode","region_id","region_code","region","telephone","isRequired","guestCartId","nonce"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { array, bool, func, object, oneOf, shape, string } from 'prop-types';\n\nimport { Price } from '@magento/peregrine';\nimport AddressForm from './addressForm';\nimport PaymentsForm from './paymentsForm';\nimport Section from './section';\nimport ShippingForm from './shippingForm';\nimport SubmitButton from './submitButton';\n\nimport classify from 'src/classify';\nimport Button from 'src/components/Button';\nimport defaultClasses from './form.css';\n\nclass Form extends Component {\n    static propTypes = {\n        availableShippingMethods: array,\n        billingAddress: shape({\n            city: string,\n            country_id: string,\n            email: string,\n            firstname: string,\n            lastname: string,\n            postcode: string,\n            region_id: string,\n            region_code: string,\n            region: string,\n            street: array,\n            telephone: string\n        }),\n        cancelCheckout: func.isRequired,\n        cart: shape({\n            details: object,\n            guestCartId: string,\n            totals: object\n        }).isRequired,\n        directory: shape({\n            countries: array\n        }).isRequired,\n        classes: shape({\n            body: string,\n            footer: string,\n            informationPrompt: string,\n            'informationPrompt--disabled': string,\n            paymentDisplayPrimary: string,\n            paymentDisplaySecondary: string,\n            root: string\n        }),\n        editing: oneOf(['address', 'paymentMethod', 'shippingMethod']),\n        editOrder: func.isRequired,\n        hasPaymentMethod: bool,\n        hasShippingAddress: bool,\n        hasShippingMethod: bool,\n        incorrectAddressMessage: string,\n        isAddressIncorrect: bool,\n        paymentData: shape({\n            description: string,\n            details: shape({\n                cardType: string\n            }),\n            nonce: string\n        }),\n        ready: bool,\n        shippingAddress: shape({\n            city: string,\n            country_id: string,\n            email: string,\n            firstname: string,\n            lastname: string,\n            postcode: string,\n            region_id: string,\n            region_code: string,\n            region: string,\n            street: array,\n            telephone: string\n        }),\n        shippingMethod: string,\n        shippingTitle: string,\n        submitShippingAddress: func.isRequired,\n        submitOrder: func.isRequired,\n        submitPaymentMethodAndBillingAddress: func.isRequired,\n        submitShippingMethod: func.isRequired,\n        submitting: bool.isRequired\n    };\n\n    /*\n     *  Class Properties.\n     */\n    get editableForm() {\n        const {\n            editing,\n            submitting,\n            isAddressIncorrect,\n            incorrectAddressMessage,\n            directory\n        } = this.props;\n        const { countries } = directory;\n\n        switch (editing) {\n            case 'address': {\n                const { shippingAddress } = this.props;\n\n                return (\n                    <AddressForm\n                        initialValues={shippingAddress}\n                        submitting={submitting}\n                        countries={countries}\n                        cancel={this.stopEditing}\n                        submit={this.submitShippingAddress}\n                        isAddressIncorrect={isAddressIncorrect}\n                        incorrectAddressMessage={incorrectAddressMessage}\n                    />\n                );\n            }\n            case 'paymentMethod': {\n                const { billingAddress } = this.props;\n\n                return (\n                    <PaymentsForm\n                        cancel={this.stopEditing}\n                        initialValues={billingAddress}\n                        submit={this.submitPaymentMethodAndBillingAddress}\n                        submitting={submitting}\n                        countries={countries}\n                    />\n                );\n            }\n            case 'shippingMethod': {\n                const { availableShippingMethods, shippingMethod } = this.props;\n\n                return (\n                    <ShippingForm\n                        availableShippingMethods={availableShippingMethods}\n                        cancel={this.stopEditing}\n                        shippingMethod={shippingMethod}\n                        submit={this.submitShippingMethod}\n                        submitting={submitting}\n                    />\n                );\n            }\n            default: {\n                return null;\n            }\n        }\n    }\n\n    get overview() {\n        const {\n            cart,\n            classes,\n            hasPaymentMethod,\n            hasShippingAddress,\n            hasShippingMethod,\n            ready,\n            submitOrder,\n            submitting\n        } = this.props;\n\n        return (\n            <Fragment>\n                <div className={classes.body}>\n                    <Section\n                        label=\"Ship To\"\n                        onClick={this.editAddress}\n                        showEditIcon={hasShippingAddress}\n                    >\n                        {this.shippingAddressSummary}\n                    </Section>\n                    <Section\n                        label=\"Pay With\"\n                        onClick={this.editPaymentMethod}\n                        showEditIcon={hasPaymentMethod}\n                    >\n                        {this.paymentMethodSummary}\n                    </Section>\n                    <Section\n                        label=\"Use\"\n                        onClick={this.editShippingMethod}\n                        showEditIcon={hasShippingMethod}\n                    >\n                        {this.shippingMethodSummary}\n                    </Section>\n                    <Section label=\"TOTAL\">\n                        <Price\n                            currencyCode={cart.totals.quote_currency_code}\n                            value={cart.totals.subtotal}\n                        />\n                        <br />\n                        <span>{cart.details.items_qty} Items</span>\n                    </Section>\n                </div>\n                <div className={classes.footer}>\n                    <Button onClick={this.dismissCheckout}>Back to Cart</Button>\n                    <SubmitButton\n                        submitting={submitting}\n                        valid={ready}\n                        submitOrder={submitOrder}\n                    />\n                </div>\n            </Fragment>\n        );\n    }\n\n    get paymentMethodSummary() {\n        const { classes, hasPaymentMethod, paymentData } = this.props;\n\n        if (!hasPaymentMethod) {\n            return (\n                <span className={classes.informationPrompt}>\n                    Add Billing Information\n                </span>\n            );\n        }\n\n        let primaryDisplay = '';\n        let secondaryDisplay = '';\n        if (paymentData) {\n            primaryDisplay = paymentData.details.cardType;\n            secondaryDisplay = paymentData.description;\n        }\n\n        return (\n            <Fragment>\n                <strong className={classes.paymentDisplayPrimary}>\n                    {primaryDisplay}\n                </strong>\n                <br />\n                <span className={classes.paymentDisplaySecondary}>\n                    {secondaryDisplay}\n                </span>\n            </Fragment>\n        );\n    }\n\n    get shippingAddressSummary() {\n        const { classes, hasShippingAddress, shippingAddress } = this.props;\n\n        if (!hasShippingAddress) {\n            return (\n                <span className={classes.informationPrompt}>\n                    Add Shipping Information\n                </span>\n            );\n        }\n\n        const name = `${shippingAddress.firstname} ${shippingAddress.lastname}`;\n        const street = `${shippingAddress.street.join(' ')}`;\n\n        return (\n            <Fragment>\n                <strong>{name}</strong>\n                <br />\n                <span>{street}</span>\n            </Fragment>\n        );\n    }\n\n    get shippingMethodSummary() {\n        const { classes, hasShippingMethod, shippingTitle } = this.props;\n\n        if (!hasShippingMethod) {\n            return (\n                <span className={classes.informationPrompt}>\n                    Specify Shipping Method\n                </span>\n            );\n        }\n\n        return (\n            <Fragment>\n                <strong>{shippingTitle}</strong>\n            </Fragment>\n        );\n    }\n\n    /*\n     *  Component Lifecycle Methods.\n     */\n\n    render() {\n        const { classes, editing } = this.props;\n        const children = editing ? this.editableForm : this.overview;\n\n        return <div className={classes.root}>{children}</div>;\n    }\n\n    /*\n     *  Event Handlers.\n     */\n    dismissCheckout = () => {\n        this.props.cancelCheckout();\n    };\n\n    editAddress = () => {\n        this.props.editOrder('address');\n    };\n\n    editPaymentMethod = () => {\n        this.props.editOrder('paymentMethod');\n    };\n\n    editShippingMethod = () => {\n        this.props.editOrder('shippingMethod');\n    };\n\n    stopEditing = () => {\n        this.props.editOrder(null);\n    };\n\n    submitShippingAddress = formValues => {\n        this.props.submitShippingAddress({\n            type: 'shippingAddress',\n            formValues\n        });\n    };\n\n    submitPaymentMethodAndBillingAddress = formValues => {\n        this.props.submitPaymentMethodAndBillingAddress({ formValues });\n    };\n\n    submitShippingMethod = formValues => {\n        this.props.submitShippingMethod({\n            type: 'shippingMethod',\n            formValues\n        });\n    };\n}\n\nexport default classify(defaultClasses)(Form);\n"],"file":"form.js"}