{"version":3,"sources":["../../../src/components/App/errorNotifications.js"],"names":["React","Component","arrayOf","object","func","shape","string","classify","Notification","NotificationStack","defaultClasses","dismissers","WeakMap","ErrorNotifications","componentDidMount","window","scrollTo","dismissNotificationOnClick","e","dismiss","preventDefault","stopPropagation","getErrorDismisser","error","onDismissError","props","has","get","set","allNotifications","classes","errors","map","id","loc","debuginfo","render","length","root","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,MAAvC,QAAqD,YAArD;AACA,OAAOC,QAAP;AACA,SAASC,YAAT,EAAuBC,iBAAvB;AACA,OAAOC,cAAP;AAEA,MAAMC,UAAU,GAAG,IAAIC,OAAJ,EAAnB;;AAEA,MAAMC,kBAAN,SAAiCZ,SAAjC,CAA2C;AAevCa,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACH;;AAEDC,EAAAA,0BAA0B,CAACC,CAAD,EAAIC,OAAJ,EAAa;AACnCD,IAAAA,CAAC,CAACE,cAAF;AACAF,IAAAA,CAAC,CAACG,eAAF;AACAF,IAAAA,OAAO;AACV,GAvBsC,CAyBvC;;;AACAG,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAqB,KAAKC,KAAhC;AACA,WAAOd,UAAU,CAACe,GAAX,CAAeH,KAAf,IACDZ,UAAU,CAACgB,GAAX,CAAeJ,KAAf,CADC,GAEDZ,UAAU,CAACiB,GAAX,CAAeL,KAAf,EAAsB,MAAMC,cAAc,CAACD,KAAD,CAA1C,EAAmDI,GAAnD,CAAuDJ,KAAvD,CAFN;AAGH;;AAED,MAAIM,gBAAJ,GAAuB;AACnB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAsB,KAAKN,KAAjC;AACA,WAAOM,MAAM,CAACC,GAAP,CAAW,CAAC;AAAET,MAAAA,KAAF;AAASU,MAAAA,EAAT;AAAaC,MAAAA;AAAb,KAAD,KACd,oBAAC,YAAD;AACI,MAAA,GAAG,EAAED,EADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,OAAO,EAAE,KAAKhB,0BAHlB;AAII,MAAA,YAAY,EAAE,KAAKK,iBAAL,CAAuBC,KAAvB;AAJlB,OAMI,wEANJ,EAOI;AAAO,MAAA,SAAS,EAAEO,OAAO,CAACK;AAA1B,kBACYF,EADZ,OACiBC,GADjB,CAPJ,CADG,CAAP;AAaH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEN,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAsB,KAAKN,KAAjC;;AACA,QAAIM,MAAM,CAACM,MAAP,GAAgB,CAApB,EAAuB;AACnB,aACI;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACQ;AAAxB,SACI,oBAAC,iBAAD,QACK,KAAKT,gBADV,CADJ,CADJ;AAOH;;AACD,WAAO,IAAP;AACH;;AA9DsC;;gBAArChB,kB,eACiB;AACfiB,EAAAA,OAAO,EAAEzB,KAAK,CAAC;AACX8B,IAAAA,SAAS,EAAE7B;AADA,GAAD,CAAL,CAENiC,UAHY;AAIfR,EAAAA,MAAM,EAAE7B,OAAO,CACXG,KAAK,CAAC;AACFkB,IAAAA,KAAK,EAAEpB,MAAM,CAACoC,UADZ;AAEFN,IAAAA,EAAE,EAAE3B,MAAM,CAACiC,UAFT;AAGFL,IAAAA,GAAG,EAAE5B;AAHH,GAAD,CADM,CAJA;AAWfkB,EAAAA,cAAc,EAAEpB,IAAI,CAACmC;AAXN,C;;AAgEvB,eAAehC,QAAQ,CAACG,cAAD,CAAR,CAAyBG,kBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { arrayOf, object, func, shape, string } from 'prop-types';\nimport classify from 'src/classify';\nimport { Notification, NotificationStack } from 'src/components/Notifications';\nimport defaultClasses from './errorNotifications.css';\n\nconst dismissers = new WeakMap();\n\nclass ErrorNotifications extends Component {\n    static propTypes = {\n        classes: shape({\n            debuginfo: string\n        }).isRequired,\n        errors: arrayOf(\n            shape({\n                error: object.isRequired,\n                id: string.isRequired,\n                loc: string\n            })\n        ),\n        onDismissError: func.isRequired\n    };\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    dismissNotificationOnClick(e, dismiss) {\n        e.preventDefault();\n        e.stopPropagation();\n        dismiss();\n    }\n\n    // Memoize dismisser funcs to reduce re-renders from func identity change.\n    getErrorDismisser(error) {\n        const { onDismissError } = this.props;\n        return dismissers.has(error)\n            ? dismissers.get(error)\n            : dismissers.set(error, () => onDismissError(error)).get(error);\n    }\n\n    get allNotifications() {\n        const { classes, errors } = this.props;\n        return errors.map(({ error, id, loc }) => (\n            <Notification\n                key={id}\n                type=\"error\"\n                onClick={this.dismissNotificationOnClick}\n                afterDismiss={this.getErrorDismisser(error)}\n            >\n                <div>Sorry! An unexpected error occurred.</div>\n                <small className={classes.debuginfo}>\n                    Debug: {id} {loc}\n                </small>\n            </Notification>\n        ));\n    }\n\n    render() {\n        const { classes, errors } = this.props;\n        if (errors.length > 0) {\n            return (\n                <div className={classes.root}>\n                    <NotificationStack>\n                        {this.allNotifications}\n                    </NotificationStack>\n                </div>\n            );\n        }\n        return null;\n    }\n}\n\nexport default classify(defaultClasses)(ErrorNotifications);\n"],"file":"errorNotifications.js"}