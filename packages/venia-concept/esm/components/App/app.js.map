{"version":3,"sources":["../../../src/components/App/app.js"],"names":["React","Component","Fragment","array","bool","func","shape","string","Main","Mask","MiniCart","Navigation","OnlineIndicator","ErrorNotifications","renderRoutes","errorRecord","App","window","location","reload","initialState","renderError","errorFallback","state","errors","stack","recoverFromRenderError","onlineIndicator","app","props","hasBeenOffline","isOnline","getDerivedStateFromError","render","closeDrawer","markErrorHandled","unhandledErrors","drawer","overlay","navIsOpen","cartIsOpen","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { array, bool, func, shape, string } from 'prop-types';\n\nimport Main from 'src/components/Main';\nimport Mask from 'src/components/Mask';\nimport MiniCart from 'src/components/MiniCart';\nimport Navigation from 'src/components/Navigation';\nimport OnlineIndicator from 'src/components/OnlineIndicator';\nimport ErrorNotifications from './errorNotifications';\nimport renderRoutes from './renderRoutes';\nimport errorRecord from 'src/util/createErrorRecord';\n\nclass App extends Component {\n    static propTypes = {\n        app: shape({\n            drawer: string,\n            hasBeenOffline: bool,\n            isOnline: bool,\n            overlay: bool.isRequired\n        }).isRequired,\n        closeDrawer: func.isRequired,\n        markErrorHandled: func.isRequired,\n        unhandledErrors: array\n    };\n\n    static get initialState() {\n        return {\n            renderError: null\n        };\n    }\n\n    get errorFallback() {\n        const { renderError } = this.state;\n        if (renderError) {\n            const errors = [\n                errorRecord(renderError, window, this, renderError.stack)\n            ];\n            return (\n                <Fragment>\n                    <Main isMasked={true} />\n                    <Mask isActive={true} />\n                    <ErrorNotifications\n                        errors={errors}\n                        onDismissError={this.recoverFromRenderError}\n                    />\n                </Fragment>\n            );\n        }\n    }\n\n    get onlineIndicator() {\n        const { app } = this.props;\n        const { hasBeenOffline, isOnline } = app;\n\n        // Only show online indicator when\n        // online after being offline\n        return hasBeenOffline ? <OnlineIndicator isOnline={isOnline} /> : null;\n    }\n\n    // Defining this static method turns this component into an ErrorBoundary,\n    // which can re-render a fallback UI if any of its descendant components\n    // throw an exception while rendering.\n    // This is a common implementation: React uses the returned object to run\n    // setState() on the component. <App /> then re-renders with a `renderError`\n    // property in state, and the render() method below will render a fallback\n    // UI describing the error if the `renderError` property is set.\n    static getDerivedStateFromError(renderError) {\n        return { renderError };\n    }\n\n    recoverFromRenderError = () => window.location.reload();\n\n    state = App.initialState;\n\n    render() {\n        const { errorFallback } = this;\n        if (errorFallback) {\n            return errorFallback;\n        }\n        const {\n            app,\n            closeDrawer,\n            markErrorHandled,\n            unhandledErrors\n        } = this.props;\n        const { onlineIndicator } = this;\n        const { drawer, overlay } = app;\n        const navIsOpen = drawer === 'nav';\n        const cartIsOpen = drawer === 'cart';\n\n        return (\n            <Fragment>\n                <Main isMasked={overlay}>\n                    {onlineIndicator}\n                    {renderRoutes()}\n                </Main>\n                <Mask isActive={overlay} dismiss={closeDrawer} />\n                <Navigation isOpen={navIsOpen} />\n                <MiniCart isOpen={cartIsOpen} />\n                <ErrorNotifications\n                    errors={unhandledErrors}\n                    onDismissError={markErrorHandled}\n                />\n            </Fragment>\n        );\n    }\n}\n\nexport default App;\n"],"file":"app.js"}