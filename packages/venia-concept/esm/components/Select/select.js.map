{"version":3,"sources":["../../../src/components/Select/select.js"],"names":["React","Component","Fragment","arrayOf","node","number","oneOfType","shape","string","BasicSelect","Option","asField","compose","classify","FieldIcons","Message","defaultClasses","Icon","ChevronDownIcon","arrow","Select","render","props","classes","fieldState","items","message","rest","options","map","label","value","input","field","isRequired"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2CC,KAA3C,EAAkDC,MAAlD,QAAgE,YAAhE;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,OAA9B,QAA6C,UAA7C;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,OAAOC,QAAP;AACA,SAASC,UAAT,EAAqBC,OAArB;AACA,OAAOC,cAAP;AAEA,OAAOC,IAAP;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AAEA,MAAMC,KAAK,GAAG,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAED,eAAX;AAA4B,EAAA,IAAI,EAAE;AAAlC,EAAd;;AAEA,MAAME,MAAN,SAAqBnB,SAArB,CAA+B;AAkB3BoB,EAAAA,MAAM,GAAG;AACL,wBAAyD,KAAKC,KAA9D;AAAA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA,KAAvB;AAA8BC,MAAAA;AAA9B,KAAN;AAAA,UAAgDC,IAAhD;;AACA,UAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAU,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KACtB,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAEA;AAA3B,OACKD,KAAK,KAAKC,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwB,EAA7B,CADV,CADY,CAAhB;AAMA,WACI,oBAAC,QAAD,QACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEZ;AAAnB,OACI,oBAAC,WAAD,eACQQ,IADR;AAEI,MAAA,UAAU,EAAEH,UAFhB;AAGI,MAAA,SAAS,EAAED,OAAO,CAACS;AAHvB,QAKKJ,OALL,CADJ,CADJ,EAUI,oBAAC,OAAD;AAAS,MAAA,UAAU,EAAEJ;AAArB,OAAkCE,OAAlC,CAVJ,CADJ;AAcH;;AAxC0B;;gBAAzBN,M,eACiB;AACfG,EAAAA,OAAO,EAAEhB,KAAK,CAAC;AACXyB,IAAAA,KAAK,EAAExB;AADI,GAAD,CADC;AAIfyB,EAAAA,KAAK,EAAEzB,MAAM,CAAC0B,UAJC;AAKfV,EAAAA,UAAU,EAAEjB,KAAK,CAAC;AACdwB,IAAAA,KAAK,EAAEzB,SAAS,CAAC,CAACD,MAAD,EAASG,MAAT,CAAD;AADF,GAAD,CALF;AAQfiB,EAAAA,KAAK,EAAEtB,OAAO,CACVI,KAAK,CAAC;AACFuB,IAAAA,KAAK,EAAEtB,MADL;AAEFuB,IAAAA,KAAK,EAAEzB,SAAS,CAAC,CAACD,MAAD,EAASG,MAAT,CAAD;AAFd,GAAD,CADK,CARC;AAcfkB,EAAAA,OAAO,EAAEtB;AAdM,C;;AA0CvB,eAAeQ,OAAO,CAClBC,QAAQ,CAACG,cAAD,CADU,EAElBL,OAFkB,CAAP,CAGbS,MAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { arrayOf, node, number, oneOfType, shape, string } from 'prop-types';\nimport { BasicSelect, Option, asField } from 'informed';\nimport { compose } from 'redux';\n\nimport classify from 'src/classify';\nimport { FieldIcons, Message } from 'src/components/Field';\nimport defaultClasses from './select.css';\n\nimport Icon from 'src/components/Icon';\nimport ChevronDownIcon from 'react-feather/dist/icons/chevron-down';\n\nconst arrow = <Icon src={ChevronDownIcon} size={18} />;\n\nclass Select extends Component {\n    static propTypes = {\n        classes: shape({\n            input: string\n        }),\n        field: string.isRequired,\n        fieldState: shape({\n            value: oneOfType([number, string])\n        }),\n        items: arrayOf(\n            shape({\n                label: string,\n                value: oneOfType([number, string])\n            })\n        ),\n        message: node\n    };\n\n    render() {\n        const { classes, fieldState, items, message, ...rest } = this.props;\n        const options = items.map(({ label, value }) => (\n            <Option key={value} value={value}>\n                {label || (value != null ? value : '')}\n            </Option>\n        ));\n\n        return (\n            <Fragment>\n                <FieldIcons after={arrow}>\n                    <BasicSelect\n                        {...rest}\n                        fieldState={fieldState}\n                        className={classes.input}\n                    >\n                        {options}\n                    </BasicSelect>\n                </FieldIcons>\n                <Message fieldState={fieldState}>{message}</Message>\n            </Fragment>\n        );\n    }\n}\n\nexport default compose(\n    classify(defaultClasses),\n    asField\n)(Select);\n"],"file":"select.js"}