{"version":3,"sources":["../../../src/components/ProductFullDetail/ProductFullDetail.js"],"names":["React","Component","Suspense","arrayOf","bool","func","number","shape","string","Form","Price","compose","classify","connect","Button","loadingIndicator","Carousel","Quantity","RichText","defaultClasses","appendOptionsToPayload","findMatchingVariant","isProductConfigurable","Options","lazy","ProductFullDetail","optionCodes","Map","optionSelections","quantity","setState","props","state","addToCart","product","payload","item","productType","__typename","optionId","selection","set","Array","from","pop","getDerivedStateFromProps","configurable_options","option","attribute_id","attribute_code","fallback","productOptions","handleSelectionChange","isConfigurable","mediaGalleryEntries","media_gallery_entries","variants","size","isMissingOptions","numProductOptions","length","numProductSelections","render","classes","isAddingItem","regularPrice","price","carouselKey","reduce","fullKey","entry","file","root","title","productName","name","productPrice","amount","currency","value","imageCarousel","options","quantityTitle","setQuantity","cartActions","description","descriptionTitle","details","detailsTitle","sku","id","isRequired","label","position","disabled","mapStateToProps","cart"],"mappings":"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","sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { arrayOf, bool, func, number, shape, string } from 'prop-types';\nimport { Form } from 'informed';\nimport { Price } from '@magento/peregrine';\nimport { compose } from 'redux';\n\nimport classify from 'src/classify';\nimport { connect } from 'src/drivers';\nimport Button from 'src/components/Button';\nimport { loadingIndicator } from 'src/components/LoadingIndicator';\nimport Carousel from 'src/components/ProductImageCarousel';\nimport Quantity from 'src/components/ProductQuantity';\nimport RichText from 'src/components/RichText';\nimport defaultClasses from './productFullDetail.css';\nimport appendOptionsToPayload from 'src/util/appendOptionsToPayload';\nimport findMatchingVariant from 'src/util/findMatchingProductVariant';\nimport isProductConfigurable from 'src/util/isProductConfigurable';\n\nconst Options = React.lazy(() => import('../ProductOptions'));\n\nclass ProductFullDetail extends Component {\n    static propTypes = {\n        classes: shape({\n            cartActions: string,\n            description: string,\n            descriptionTitle: string,\n            details: string,\n            detailsTitle: string,\n            imageCarousel: string,\n            options: string,\n            productName: string,\n            productPrice: string,\n            quantity: string,\n            quantityTitle: string,\n            root: string,\n            title: string\n        }),\n        product: shape({\n            __typename: string,\n            id: number,\n            sku: string.isRequired,\n            price: shape({\n                regularPrice: shape({\n                    amount: shape({\n                        currency: string.isRequired,\n                        value: number.isRequired\n                    })\n                }).isRequired\n            }).isRequired,\n            media_gallery_entries: arrayOf(\n                shape({\n                    label: string,\n                    position: number,\n                    disabled: bool,\n                    file: string.isRequired\n                })\n            ),\n            description: string\n        }).isRequired,\n        addToCart: func.isRequired\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { configurable_options } = props.product;\n        const optionCodes = new Map(state.optionCodes);\n\n        // if this is a simple product, do nothing\n        if (!isProductConfigurable(props.product)) {\n            return null;\n        }\n\n        // otherwise, cache attribute codes to avoid lookup cost later\n        for (const option of configurable_options) {\n            optionCodes.set(option.attribute_id, option.attribute_code);\n        }\n\n        return { optionCodes };\n    }\n\n    state = {\n        optionCodes: new Map(),\n        optionSelections: new Map(),\n        quantity: 1\n    };\n\n    setQuantity = quantity => this.setState({ quantity });\n\n    addToCart = () => {\n        const { props, state } = this;\n        const { optionSelections, quantity, optionCodes } = state;\n        const { addToCart, product } = props;\n\n        const payload = {\n            item: product,\n            productType: product.__typename,\n            quantity\n        };\n\n        if (isProductConfigurable(product)) {\n            appendOptionsToPayload(payload, optionSelections, optionCodes);\n        }\n\n        addToCart(payload);\n    };\n\n    handleSelectionChange = (optionId, selection) => {\n        this.setState(({ optionSelections }) => ({\n            optionSelections: new Map(optionSelections).set(\n                optionId,\n                Array.from(selection).pop()\n            )\n        }));\n    };\n\n    get fallback() {\n        return loadingIndicator;\n    }\n\n    get productOptions() {\n        const { fallback, handleSelectionChange, props } = this;\n        const { configurable_options } = props.product;\n        const isConfigurable = isProductConfigurable(props.product);\n\n        if (!isConfigurable) {\n            return null;\n        }\n\n        return (\n            <Suspense fallback={fallback}>\n                <Options\n                    options={configurable_options}\n                    onSelectionChange={handleSelectionChange}\n                />\n            </Suspense>\n        );\n    }\n\n    get mediaGalleryEntries() {\n        const { props, state } = this;\n        const { product } = props;\n        const { optionCodes, optionSelections } = state;\n        const { media_gallery_entries, variants } = product;\n\n        const isConfigurable = isProductConfigurable(product);\n\n        if (\n            !isConfigurable ||\n            (isConfigurable && optionSelections.size === 0)\n        ) {\n            return media_gallery_entries;\n        }\n\n        const item = findMatchingVariant({\n            optionCodes,\n            optionSelections,\n            variants\n        });\n\n        if (!item) {\n            return media_gallery_entries;\n        }\n\n        return item.product.media_gallery_entries;\n    }\n\n    get isMissingOptions() {\n        const { product } = this.props;\n\n        // Non-configurable products can't be missing options\n        if (!isProductConfigurable(product)) {\n            return false;\n        }\n\n        // Configurable products are missing options if we have fewer\n        // option selections than the product has options.\n        const { configurable_options } = product;\n        const numProductOptions = configurable_options.length;\n        const numProductSelections = this.state.optionSelections.size;\n\n        return numProductSelections < numProductOptions;\n    }\n\n    render() {\n        const {\n            addToCart,\n            isMissingOptions,\n            mediaGalleryEntries,\n            productOptions,\n            props\n        } = this;\n        const { classes, isAddingItem, product } = props;\n        const { regularPrice } = product.price;\n\n        // We want this key to change whenever mediaGalleryEntries changes.\n        // Make it dependent on a unique value in each entry (file),\n        // and the order.\n        const carouselKey = mediaGalleryEntries.reduce((fullKey, entry) => {\n            return `${fullKey},${entry.file}`;\n        }, '');\n\n        return (\n            <Form className={classes.root}>\n                <section className={classes.title}>\n                    <h1 className={classes.productName}>\n                        <span>{product.name}</span>\n                    </h1>\n                    <p className={classes.productPrice}>\n                        <Price\n                            currencyCode={regularPrice.amount.currency}\n                            value={regularPrice.amount.value}\n                        />\n                    </p>\n                </section>\n                <section className={classes.imageCarousel}>\n                    <Carousel images={mediaGalleryEntries} key={carouselKey} />\n                </section>\n                <section className={classes.options}>{productOptions}</section>\n                <section className={classes.quantity}>\n                    <h2 className={classes.quantityTitle}>\n                        <span>Quantity</span>\n                    </h2>\n                    <Quantity\n                        initialValue={this.state.quantity}\n                        onValueChange={this.setQuantity}\n                    />\n                </section>\n                <section className={classes.cartActions}>\n                    <Button\n                        priority=\"high\"\n                        onClick={addToCart}\n                        disabled={isAddingItem || isMissingOptions}\n                    >\n                        <span>Add to Cart</span>\n                    </Button>\n                </section>\n                <section className={classes.description}>\n                    <h2 className={classes.descriptionTitle}>\n                        <span>Product Description</span>\n                    </h2>\n                    <RichText content={product.description} />\n                </section>\n                <section className={classes.details}>\n                    <h2 className={classes.detailsTitle}>\n                        <span>SKU</span>\n                    </h2>\n                    <strong>{product.sku}</strong>\n                </section>\n            </Form>\n        );\n    }\n}\n\nconst mapStateToProps = ({ cart }) => {\n    return {\n        isAddingItem: cart.isAddingItem\n    };\n};\n\nexport default compose(\n    classify(defaultClasses),\n    connect(mapStateToProps)\n)(ProductFullDetail);\n"],"file":"ProductFullDetail.js"}