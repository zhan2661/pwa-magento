{"version":3,"sources":["../../../src/components/CategoryList/categoryTile.js"],"names":["React","Component","arrayOf","string","shape","classify","Link","resourceUrl","defaultClasses","categoryUrlSuffix","previewImageSize","CategoryTile","imagePath","image","productImagePreview","props","item","previewProduct","items","type","width","small_image","render","classes","imageUrl","style","imagePreview","name","root","url_key","imageWrapper","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { arrayOf, string, shape } from 'prop-types';\nimport classify from 'src/classify';\nimport { Link, resourceUrl } from 'src/drivers';\nimport defaultClasses from './categoryTile.css';\n\n// TODO: get categoryUrlSuffix from graphql storeOptions when it is ready\nconst categoryUrlSuffix = '.html';\n\nconst previewImageSize = 480;\n\nclass CategoryTile extends Component {\n    static propTypes = {\n        item: shape({\n            image: string,\n            name: string.isRequired,\n            productImagePreview: shape({\n                items: arrayOf(\n                    shape({\n                        small_image: string\n                    })\n                )\n            }),\n            url_key: string.isRequired\n        }).isRequired,\n        classes: shape({\n            item: string,\n            image: string,\n            imageWrapper: string,\n            name: string\n        }).isRequired\n    };\n\n    get imagePath() {\n        const { image, productImagePreview } = this.props.item;\n        const previewProduct = productImagePreview.items[0];\n        if (image) {\n            return resourceUrl(image, {\n                type: 'image-category',\n                width: previewImageSize\n            });\n        } else if (previewProduct) {\n            return resourceUrl(previewProduct.small_image, {\n                type: 'image-product',\n                width: previewImageSize\n            });\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        const { imagePath, props } = this;\n        const { classes, item } = props;\n\n        // interpolation doesn't work inside `url()` for legacy reasons\n        // so a custom property should wrap its value in `url()`\n        const imageUrl = imagePath ? `url(${imagePath})` : 'none';\n        const style = { '--venia-image': imageUrl };\n\n        // render an actual image element for accessibility\n        const imagePreview = imagePath ? (\n            <img className={classes.image} src={imagePath} alt={item.name} />\n        ) : null;\n\n        return (\n            <Link\n                className={classes.root}\n                to={`/${item.url_key}${categoryUrlSuffix}`}\n            >\n                <span className={classes.imageWrapper} style={style}>\n                    {imagePreview}\n                </span>\n                <span className={classes.name}>{item.name}</span>\n            </Link>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(CategoryTile);\n"],"file":"categoryTile.js"}