{"version":3,"sources":["../../../src/components/ProductImageCarousel/thumbnailList.js"],"names":["React","Component","PropTypes","List","classify","Thumbnail","defaultClasses","ThumbnailList","newActiveItemIndex","props","updateActiveItemIndex","render","activeItemIndex","items","classes","itemIndex","updateActiveItemHandler","i","file","number","shape","root","string","arrayOf","label","position","disabled","bool","isRequired","func"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;;AAAA,qDAiBRO,kBAAkB,IAAI;AAC5C,WAAKC,KAAL,CAAWC,qBAAX,CAAiCF,kBAAjC;AACH,KAnBiC;AAAA;;AAqBlCG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,KAAnB;AAA0BC,MAAAA;AAA1B,QAAsC,KAAKL,KAAjD;AAEA,WACI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAEI,KADX;AAEI,MAAA,UAAU,EAAEJ,KAAK,IACb,oBAAC,SAAD,eACQA,KADR;AAEI,QAAA,QAAQ,EAAEG,eAAe,KAAKH,KAAK,CAACM,SAFxC;AAGI,QAAA,cAAc,EAAE,KAAKC;AAHzB,SAHR;AASI,MAAA,UAAU,EAAEC,CAAC,IAAIA,CAAC,CAACC,IATvB;AAUI,MAAA,OAAO,EAAEJ;AAVb,MADJ;AAcH;;AAtCiC;;gBAAhCP,a,eACiB;AACfK,EAAAA,eAAe,EAAEV,SAAS,CAACiB,MADZ;AAEfL,EAAAA,OAAO,EAAEZ,SAAS,CAACkB,KAAV,CAAgB;AACrBC,IAAAA,IAAI,EAAEnB,SAAS,CAACoB;AADK,GAAhB,CAFM;AAKfT,EAAAA,KAAK,EAAEX,SAAS,CAACqB,OAAV,CACHrB,SAAS,CAACkB,KAAV,CAAgB;AACZI,IAAAA,KAAK,EAAEtB,SAAS,CAACoB,MADL;AAEZG,IAAAA,QAAQ,EAAEvB,SAAS,CAACiB,MAFR;AAGZO,IAAAA,QAAQ,EAAExB,SAAS,CAACyB,IAHR;AAIZT,IAAAA,IAAI,EAAEhB,SAAS,CAACoB,MAAV,CAAiBM;AAJX,GAAhB,CADG,EAOLA,UAZa;AAaflB,EAAAA,qBAAqB,EAAER,SAAS,CAAC2B,IAAV,CAAeD;AAbvB,C;;AAwCvB,eAAexB,QAAQ,CAACE,cAAD,CAAR,CAAyBC,aAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from '@magento/peregrine';\n\nimport classify from 'src/classify';\nimport Thumbnail from './thumbnail';\nimport defaultClasses from './thumbnailList.css';\n\nclass ThumbnailList extends Component {\n    static propTypes = {\n        activeItemIndex: PropTypes.number,\n        classes: PropTypes.shape({\n            root: PropTypes.string\n        }),\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                label: PropTypes.string,\n                position: PropTypes.number,\n                disabled: PropTypes.bool,\n                file: PropTypes.string.isRequired\n            })\n        ).isRequired,\n        updateActiveItemIndex: PropTypes.func.isRequired\n    };\n\n    updateActiveItemHandler = newActiveItemIndex => {\n        this.props.updateActiveItemIndex(newActiveItemIndex);\n    };\n\n    render() {\n        const { activeItemIndex, items, classes } = this.props;\n\n        return (\n            <List\n                items={items}\n                renderItem={props => (\n                    <Thumbnail\n                        {...props}\n                        isActive={activeItemIndex === props.itemIndex}\n                        onClickHandler={this.updateActiveItemHandler}\n                    />\n                )}\n                getItemKey={i => i.file}\n                classes={classes}\n            />\n        );\n    }\n}\n\nexport default classify(defaultClasses)(ThumbnailList);\n"],"file":"thumbnailList.js"}