{"version":3,"sources":["../../../src/components/ProductImageCarousel/carousel.js"],"names":["React","Component","PropTypes","memoize","resourceUrl","Icon","ChevronLeftIcon","ChevronRightIcon","classify","ThumbnailList","defaultClasses","transparentPlaceholder","ChevronIcons","left","right","Carousel","activeItemIndex","currentImageLoaded","index","setState","items","filter","i","disabled","sort","a","b","aPos","isNaN","position","bPos","sortedImages","state","updateActiveItemIndex","length","direction","props","classes","images","sortAndFilterImages","render","mainImage","src","file","type","width","alt","label","root","imageContainer","getChevron","setCurrentImageLoaded","currentImage","shape","string","arrayOf","number","bool","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\n\nimport { resourceUrl } from 'src/drivers';\nimport Icon from 'src/components/Icon';\nimport ChevronLeftIcon from 'react-feather/dist/icons/chevron-left';\nimport ChevronRightIcon from 'react-feather/dist/icons/chevron-right';\nimport classify from 'src/classify';\nimport ThumbnailList from './thumbnailList';\nimport defaultClasses from './carousel.css';\nimport { transparentPlaceholder } from 'src/shared/images';\n\nconst ChevronIcons = {\n    left: ChevronLeftIcon,\n    right: ChevronRightIcon\n};\n\nclass Carousel extends Component {\n    static propTypes = {\n        classes: PropTypes.shape({\n            root: PropTypes.string,\n            currentImage: PropTypes.string,\n            imageContainer: PropTypes.string,\n            'chevron-left': PropTypes.string,\n            'chevron-right': PropTypes.string\n        }),\n        images: PropTypes.arrayOf(\n            PropTypes.shape({\n                label: PropTypes.string,\n                position: PropTypes.number,\n                disabled: PropTypes.bool,\n                file: PropTypes.string.isRequired\n            })\n        ).isRequired\n    };\n\n    state = {\n        activeItemIndex: 0,\n        currentImageLoaded: false\n    };\n\n    updateActiveItemIndex = index => {\n        this.setState({ activeItemIndex: index });\n    };\n\n    // The spec does not guarantee a position parameter,\n    // so the rule will be to order items without position last.\n    // See https://github.com/magento/graphql-ce/issues/113.\n    // Memoize this expensive operation based on reference equality\n    // of the `images` array. Apollo cache should return a new array\n    // only when it does a new fetch.\n    sortAndFilterImages = memoize(items =>\n        items\n            .filter(i => !i.disabled)\n            .sort((a, b) => {\n                const aPos = isNaN(a.position) ? 9999 : a.position;\n                const bPos = isNaN(b.position) ? 9999 : b.position;\n                return aPos - bPos;\n            })\n    );\n\n    get sortedImages() {\n        const { images } = this.props;\n        return this.sortAndFilterImages(images);\n    }\n\n    leftChevronHandler = () => {\n        const sortedImages = this.sortedImages;\n        const { activeItemIndex } = this.state;\n        activeItemIndex > 0\n            ? this.updateActiveItemIndex(activeItemIndex - 1)\n            : this.updateActiveItemIndex(sortedImages.length - 1);\n    };\n\n    rightChevronHandler = () => {\n        const sortedImages = this.sortedImages;\n        const { activeItemIndex } = this.state;\n        this.updateActiveItemIndex((activeItemIndex + 1) % sortedImages.length);\n    };\n\n    getChevron = direction => (\n        <button\n            onClick={this[`${direction}ChevronHandler`]}\n            className={this.props.classes[`chevron-${direction}`]}\n        >\n            <Icon src={ChevronIcons[direction]} size={40} />\n        </button>\n    );\n\n    setCurrentImageLoaded = () => {\n        this.setState({\n            currentImageLoaded: true\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const sortedImages = this.sortedImages;\n\n        const mainImage = sortedImages[this.state.activeItemIndex] || {};\n        const src = mainImage.file\n            ? resourceUrl(mainImage.file, { type: 'image-product', width: 640 })\n            : transparentPlaceholder;\n        const alt = mainImage.label || 'image-product';\n        return (\n            <div className={classes.root}>\n                <div className={classes.imageContainer}>\n                    {this.getChevron('left')}\n                    <img\n                        onLoad={this.setCurrentImageLoaded}\n                        className={classes.currentImage}\n                        src={src}\n                        alt={alt}\n                    />\n                    {!this.state.currentImageLoaded ? (\n                        <img\n                            className={classes.currentImage}\n                            src={transparentPlaceholder}\n                            alt={alt}\n                        />\n                    ) : null}\n                    {this.getChevron('right')}\n                </div>\n                <ThumbnailList\n                    items={sortedImages}\n                    activeItemIndex={this.state.activeItemIndex}\n                    updateActiveItemIndex={this.updateActiveItemIndex}\n                />\n            </div>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(Carousel);\n"],"file":"carousel.js"}