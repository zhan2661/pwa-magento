{"version":3,"sources":["../../../src/components/ProductOptions/option.js"],"names":["React","Component","arrayOf","func","object","shape","string","classify","getOptionType","SwatchList","TileList","defaultClasses","getItemKey","value_index","Option","selection","attribute_id","onSelectionChange","props","listComponent","attribute_code","values","optionType","render","handleSelectionChange","ValueList","classes","label","root","title","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,MAAvC,QAAqD,YAArD;AAEA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAOC,cAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqBA,WAAxC;;AAEA,MAAMC,MAAN,SAAqBb,SAArB,CAA+B;AAAA;AAAA;;AAAA,mDAaHc,SAAS,IAAI;AACjC,YAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAAsC,KAAKC,KAAjD;;AAEA,UAAID,iBAAJ,EAAuB;AACnBA,QAAAA,iBAAiB,CAACD,YAAD,EAAeD,SAAf,CAAjB;AACH;AACJ,KAnB0B;AAAA;;AAqB3B,MAAII,aAAJ,GAAoB;AAChB,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAA6B,KAAKH,KAAxC,CADgB,CAGhB;AACA;;AACA,UAAMI,UAAU,GAAGd,aAAa,CAAC;AAAEY,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,KAAD,CAAhC;AAEA,WAAOC,UAAU,KAAK,QAAf,GAA0Bb,UAA1B,GAAuCC,QAA9C;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,qBAAF;AAAyBL,MAAAA,aAAa,EAAEM,SAAxC;AAAmDP,MAAAA;AAAnD,QAA6D,IAAnE;AACA,UAAM;AAAEQ,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBN,MAAAA;AAAlB,QAA6BH,KAAnC;AAEA,WACI;AAAK,MAAA,SAAS,EAAEQ,OAAO,CAACE;AAAxB,OACI;AAAI,MAAA,SAAS,EAAEF,OAAO,CAACG;AAAvB,OACI,kCAAOF,KAAP,CADJ,CADJ,EAII,oBAAC,SAAD;AACI,MAAA,UAAU,EAAEf,UADhB;AAEI,MAAA,KAAK,EAAES,MAFX;AAGI,MAAA,iBAAiB,EAAEG;AAHvB,MAJJ,CADJ;AAYH;;AA/C0B;;gBAAzBV,M,eACiB;AACfE,EAAAA,YAAY,EAAEV,MADC;AAEfc,EAAAA,cAAc,EAAEd,MAAM,CAACwB,UAFR;AAGfJ,EAAAA,OAAO,EAAErB,KAAK,CAAC;AACXuB,IAAAA,IAAI,EAAEtB,MADK;AAEXuB,IAAAA,KAAK,EAAEvB;AAFI,GAAD,CAHC;AAOfqB,EAAAA,KAAK,EAAErB,MAAM,CAACwB,UAPC;AAQfb,EAAAA,iBAAiB,EAAEd,IARJ;AASfkB,EAAAA,MAAM,EAAEnB,OAAO,CAACE,MAAD,CAAP,CAAgB0B;AATT,C;;AAiDvB,eAAevB,QAAQ,CAACI,cAAD,CAAR,CAAyBG,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { arrayOf, func, object, shape, string } from 'prop-types';\n\nimport classify from 'src/classify';\nimport getOptionType from './getOptionType';\nimport SwatchList from './swatchList';\nimport TileList from './tileList';\nimport defaultClasses from './option.css';\n\nconst getItemKey = ({ value_index }) => value_index;\n\nclass Option extends Component {\n    static propTypes = {\n        attribute_id: string,\n        attribute_code: string.isRequired,\n        classes: shape({\n            root: string,\n            title: string\n        }),\n        label: string.isRequired,\n        onSelectionChange: func,\n        values: arrayOf(object).isRequired\n    };\n\n    handleSelectionChange = selection => {\n        const { attribute_id, onSelectionChange } = this.props;\n\n        if (onSelectionChange) {\n            onSelectionChange(attribute_id, selection);\n        }\n    };\n\n    get listComponent() {\n        const { attribute_code, values } = this.props;\n\n        // TODO: get an explicit field from the API\n        // that identifies an attribute as a swatch\n        const optionType = getOptionType({ attribute_code, values });\n\n        return optionType === 'swatch' ? SwatchList : TileList;\n    }\n\n    render() {\n        const { handleSelectionChange, listComponent: ValueList, props } = this;\n        const { classes, label, values } = props;\n\n        return (\n            <div className={classes.root}>\n                <h3 className={classes.title}>\n                    <span>{label}</span>\n                </h3>\n                <ValueList\n                    getItemKey={getItemKey}\n                    items={values}\n                    onSelectionChange={handleSelectionChange}\n                />\n            </div>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(Option);\n"],"file":"option.js"}