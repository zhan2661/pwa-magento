{"version":3,"sources":["../../../src/components/MiniCart/cartOptions.js"],"names":["React","Component","Suspense","array","bool","func","number","shape","string","Form","Price","LoadingIndicator","classify","defaultClasses","Button","Quantity","appendOptionsToPayload","isProductConfigurable","currencyCode","Options","lazy","CartOptions","constructor","props","quantity","setState","optionId","selection","optionSelections","Map","set","Array","from","pop","updateCart","cartItem","configItem","state","payload","item","productType","__typename","item_id","qty","fallback","render","handleSelectionChange","classes","isUpdatingItem","name","price","modalClass","modal_active","modal","options","configurable_options","root","focusItem","form","quantityTitle","setQuantity","save","closeOptionsDrawer","handleClick","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { array, bool, func, number, shape, string } from 'prop-types';\nimport { Form } from 'informed';\nimport { Price } from '@magento/peregrine';\n\nimport LoadingIndicator from 'src/components/LoadingIndicator';\nimport classify from 'src/classify';\nimport defaultClasses from './cartOptions.css';\nimport Button from 'src/components/Button';\nimport Quantity from 'src/components/ProductQuantity';\nimport appendOptionsToPayload from 'src/util/appendOptionsToPayload';\nimport isProductConfigurable from 'src/util/isProductConfigurable';\n\n// TODO: get real currencyCode for cartItem\nconst currencyCode = 'USD';\n\nconst Options = React.lazy(() => import('../ProductOptions'));\n\nclass CartOptions extends Component {\n    static propTypes = {\n        classes: shape({\n            root: string,\n            focusItem: string,\n            price: string,\n            form: string,\n            quantity: string,\n            quantityTitle: string,\n            save: string,\n            modal: string,\n            modal_active: string,\n            options: string\n        }),\n        cartItem: shape({\n            item_id: number.isRequired,\n            name: string.isRequired,\n            price: number.isRequired,\n            qty: number.isRequired\n        }),\n        configItem: shape({\n            __typename: string,\n            configurable_options: array\n        }),\n        isUpdatingItem: bool,\n        updateCart: func.isRequired,\n        closeOptionsDrawer: func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            optionSelections: new Map(),\n            quantity: props.cartItem.qty\n        };\n    }\n\n    get fallback() {\n        return <LoadingIndicator>Fetching Data</LoadingIndicator>;\n    }\n\n    setQuantity = quantity => this.setState({ quantity });\n\n    handleSelectionChange = (optionId, selection) => {\n        this.setState(({ optionSelections }) => ({\n            optionSelections: new Map(optionSelections).set(\n                optionId,\n                Array.from(selection).pop()\n            )\n        }));\n    };\n\n    handleClick = async () => {\n        const { updateCart, cartItem, configItem } = this.props;\n        const { optionSelections, quantity } = this.state;\n\n        const payload = {\n            item: configItem,\n            productType: configItem.__typename,\n            quantity: quantity\n        };\n\n        if (isProductConfigurable(configItem)) {\n            appendOptionsToPayload(payload, optionSelections);\n        }\n\n        updateCart(payload, cartItem.item_id);\n    };\n\n    render() {\n        const { fallback, handleSelectionChange, props } = this;\n        const { classes, cartItem, configItem, isUpdatingItem } = props;\n        const { name, price } = cartItem;\n\n        const modalClass = isUpdatingItem\n            ? classes.modal_active\n            : classes.modal;\n\n        const options = isProductConfigurable(configItem) ? (\n            <Suspense fallback={fallback}>\n                <section className={classes.options}>\n                    <Options\n                        options={configItem.configurable_options}\n                        onSelectionChange={handleSelectionChange}\n                    />\n                </section>\n            </Suspense>\n        ) : null;\n\n        return (\n            <Form className={classes.root}>\n                <div className={classes.focusItem}>\n                    <span className={classes.name}>{name}</span>\n                    <span className={classes.price}>\n                        <Price currencyCode={currencyCode} value={price} />\n                    </span>\n                </div>\n                <div className={classes.form}>\n                    {options}\n                    <section className={classes.quantity}>\n                        <h2 className={classes.quantityTitle}>\n                            <span>Quantity</span>\n                        </h2>\n                        <Quantity\n                            initialValue={props.cartItem.qty}\n                            onValueChange={this.setQuantity}\n                        />\n                    </section>\n                </div>\n                <div className={classes.save}>\n                    <Button onClick={this.props.closeOptionsDrawer}>\n                        <span>Cancel</span>\n                    </Button>\n                    <Button priority=\"high\" onClick={this.handleClick}>\n                        <span>Update Cart</span>\n                    </Button>\n                </div>\n                <div className={modalClass}>\n                    <LoadingIndicator>Updating Cart</LoadingIndicator>\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(CartOptions);\n"],"file":"cartOptions.js"}