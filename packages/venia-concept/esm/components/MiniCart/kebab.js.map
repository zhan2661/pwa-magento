{"version":3,"sources":["../../../src/components/MiniCart/kebab.js"],"names":["React","Component","createRef","shape","string","Icon","classify","defaultClasses","MoreVerticalIcon","Kebab","constructor","props","event","kebabButtonRef","current","contains","target","setState","isOpen","state","componentDidMount","document","addEventListener","handleDocumentClick","componentWillUnmount","removeEventListener","render","classes","children","restProps","toggleClass","dropdown_active","dropdown","root","kebab"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,cAAP;AAEA,OAAOC,gBAAP,MAA6B,wCAA7B;;AAEA,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAU1BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,iDAcGC,KAAK,IAAI;AAC3B,WAAKC,cAAL,CAAoBC,OAApB,CAA4BC,QAA5B,CAAqCH,KAAK,CAACI,MAA3C,IACM,KAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd,CADN,GAEM,KAAKD,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd,CAFN;AAGH,KAlBkB;;AAEf,SAAKL,cAAL,GAAsBX,SAAS,EAA/B;AAEA,SAAKiB,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKC,mBAAxC;AACAF,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsC,KAAKC,mBAA3C;AACH;;AAQDC,EAAAA,oBAAoB,GAAG;AACnBH,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsC,KAAKF,mBAA3C;AACAF,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,UAA7B,EAAyC,KAAKF,mBAA9C;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBAA4C,KAAKf,KAAjD;AAAA,UAAM;AAAEgB,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAN;AAAA,UAA8BC,SAA9B;;AAEA,UAAMC,WAAW,GAAG,KAAKX,KAAL,CAAWD,MAAX,GACdS,OAAO,CAACI,eADM,GAEdJ,OAAO,CAACK,QAFd;AAIA,WACI,wCAASH,SAAT;AAAoB,MAAA,SAAS,EAAEF,OAAO,CAACM;AAAvC,QACI;AAAQ,MAAA,SAAS,EAAEN,OAAO,CAACO,KAA3B;AAAkC,MAAA,GAAG,EAAE,KAAKrB;AAA5C,OACI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEL;AAAX,MADJ,CADJ,EAII;AAAI,MAAA,SAAS,EAAEsB;AAAf,OAA6BF,QAA7B,CAJJ,CADJ;AAQH;;AAlDyB;;gBAAxBnB,K,eACiB;AACfkB,EAAAA,OAAO,EAAExB,KAAK,CAAC;AACX6B,IAAAA,QAAQ,EAAE5B,MADC;AAEX2B,IAAAA,eAAe,EAAE3B,MAFN;AAGX8B,IAAAA,KAAK,EAAE9B,MAHI;AAIX6B,IAAAA,IAAI,EAAE7B;AAJK,GAAD;AADC,C;;AAoDvB,eAAeE,QAAQ,CAACC,cAAD,CAAR,CAAyBE,KAAzB,CAAf","sourcesContent":["import React, { Component, createRef } from 'react';\nimport { shape, string } from 'prop-types';\nimport Icon from 'src/components/Icon';\nimport classify from 'src/classify';\nimport defaultClasses from './kebab.css';\n\nimport MoreVerticalIcon from 'react-feather/dist/icons/more-vertical';\n\nclass Kebab extends Component {\n    static propTypes = {\n        classes: shape({\n            dropdown: string,\n            dropdown_active: string,\n            kebab: string,\n            root: string\n        })\n    };\n\n    constructor(props) {\n        super(props);\n        this.kebabButtonRef = createRef();\n\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleDocumentClick);\n        document.addEventListener('touchend', this.handleDocumentClick);\n    }\n\n    handleDocumentClick = event => {\n        this.kebabButtonRef.current.contains(event.target)\n            ? this.setState({ isOpen: true })\n            : this.setState({ isOpen: false });\n    };\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleDocumentClick);\n        document.removeEventListener('touchend', this.handleDocumentClick);\n    }\n\n    render() {\n        const { classes, children, ...restProps } = this.props;\n\n        const toggleClass = this.state.isOpen\n            ? classes.dropdown_active\n            : classes.dropdown;\n\n        return (\n            <div {...restProps} className={classes.root}>\n                <button className={classes.kebab} ref={this.kebabButtonRef}>\n                    <Icon src={MoreVerticalIcon} />\n                </button>\n                <ul className={toggleClass}>{children}</ul>\n            </div>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(Kebab);\n"],"file":"kebab.js"}