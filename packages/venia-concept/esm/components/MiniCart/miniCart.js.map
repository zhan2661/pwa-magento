{"version":3,"sources":["../../../src/components/MiniCart/miniCart.js"],"names":["React","Component","Fragment","Suspense","compose","connect","bool","func","object","shape","string","Price","classify","getCartDetails","updateItemInCart","removeItemFromCart","openOptionsDrawer","closeOptionsDrawer","cancelCheckout","Icon","CloseIcon","CheckoutButton","EmptyMiniCart","Mask","ProductList","Trigger","defaultClasses","isEmptyCartVisible","isMiniCartMaskOpen","CartOptions","getProductDetailByName","loadingIndicator","Query","Checkout","lazy","MiniCart","constructor","args","item","setState","focusItem","props","state","componentDidMount","cartId","cart","details","id","cartCurrencyCode","currency","quote_currency_code","productList","items","totals","totalsSummary","classes","hasSubtotal","itemsQuantity","items_qty","itemQuantityText","totalPrice","subtotal","subtotalLabel","subtotalValue","placeholderButton","checkout","summary","productOptions","hasOptions","options","length","name","onServer","loading","error","data","itemWithOptions","products","isUpdatingItem","miniCartInner","isCartEmpty","footer","footerClassName","footerMaskOpen","body","render","isOptionsDrawerOpen","isLoading","isOpen","className","root_open","root","title","header","isRequired","guestCartId","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, Suspense } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'src/drivers';\nimport { bool, func, object, shape, string } from 'prop-types';\nimport { Price } from '@magento/peregrine';\nimport classify from 'src/classify';\nimport {\n    getCartDetails,\n    updateItemInCart,\n    removeItemFromCart,\n    openOptionsDrawer,\n    closeOptionsDrawer\n} from 'src/actions/cart';\nimport { cancelCheckout } from 'src/actions/checkout';\nimport Icon from 'src/components/Icon';\nimport CloseIcon from 'react-feather/dist/icons/x';\nimport CheckoutButton from 'src/components/Checkout/checkoutButton';\nimport EmptyMiniCart from './emptyMiniCart';\nimport Mask from './mask';\nimport ProductList from './productList';\nimport Trigger from './trigger';\nimport defaultClasses from './miniCart.css';\nimport { isEmptyCartVisible, isMiniCartMaskOpen } from 'src/selectors/cart';\nimport CartOptions from './cartOptions';\nimport getProductDetailByName from '../../queries/getProductDetailByName.graphql';\nimport { loadingIndicator } from 'src/components/LoadingIndicator';\nimport { Query } from 'react-apollo';\n\nconst Checkout = React.lazy(() => import('src/components/Checkout'));\n\nclass MiniCart extends Component {\n    static propTypes = {\n        cancelCheckout: func.isRequired,\n        cart: shape({\n            details: object,\n            guestCartId: string,\n            totals: object,\n            isLoading: bool,\n            isOptionsDrawerOpen: bool,\n            isUpdatingItem: bool\n        }),\n        classes: shape({\n            body: string,\n            footer: string,\n            footerMaskOpen: string,\n            header: string,\n            placeholderButton: string,\n            root_open: string,\n            root: string,\n            subtotalLabel: string,\n            subtotalValue: string,\n            summary: string,\n            title: string,\n            totals: string\n        }),\n        isCartEmpty: bool,\n        updateItemInCart: func,\n        openOptionsDrawer: func.isRequired,\n        closeOptionsDrawer: func.isRequired,\n        isMiniCartMaskOpen: bool\n    };\n\n    constructor(...args) {\n        super(...args);\n        this.state = {\n            focusItem: null\n        };\n    }\n\n    async componentDidMount() {\n        const { getCartDetails } = this.props;\n        await getCartDetails();\n    }\n\n    get cartId() {\n        const { cart } = this.props;\n\n        return cart && cart.details && cart.details.id;\n    }\n\n    get cartCurrencyCode() {\n        const { cart } = this.props;\n\n        return (\n            cart &&\n            cart.details &&\n            cart.details.currency &&\n            cart.details.currency.quote_currency_code\n        );\n    }\n\n    get productList() {\n        const { cart, removeItemFromCart } = this.props;\n\n        const { cartCurrencyCode, cartId } = this;\n\n        return cartId ? (\n            <ProductList\n                removeItemFromCart={removeItemFromCart}\n                openOptionsDrawer={this.openOptionsDrawer}\n                currencyCode={cartCurrencyCode}\n                items={cart.details.items}\n                totalsItems={cart.totals.items}\n            />\n        ) : null;\n    }\n\n    get totalsSummary() {\n        const { cart, classes } = this.props;\n        const { cartCurrencyCode, cartId } = this;\n        const hasSubtotal = cartId && cart.totals && 'subtotal' in cart.totals;\n        const itemsQuantity = cart.details.items_qty;\n        const itemQuantityText = itemsQuantity === 1 ? 'item' : 'items';\n        const totalPrice = cart.totals.subtotal;\n\n        return hasSubtotal ? (\n            <dl className={classes.totals}>\n                <dt className={classes.subtotalLabel}>\n                    <span>\n                        Cart Total :&nbsp;\n                        <Price\n                            currencyCode={cartCurrencyCode}\n                            value={totalPrice}\n                        />\n                    </span>\n                </dt>\n                <dd className={classes.subtotalValue}>\n                    ({itemsQuantity} {itemQuantityText})\n                </dd>\n            </dl>\n        ) : null;\n    }\n\n    get placeholderButton() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.placeholderButton}>\n                <CheckoutButton ready={false} />\n            </div>\n        );\n    }\n\n    get checkout() {\n        const { props, totalsSummary, placeholderButton } = this;\n        const { classes, cart } = props;\n\n        return (\n            <div>\n                <div className={classes.summary}>{totalsSummary}</div>\n                <Suspense fallback={placeholderButton}>\n                    <Checkout cart={cart} />\n                </Suspense>\n            </div>\n        );\n    }\n\n    get productOptions() {\n        const { props, state, closeOptionsDrawer } = this;\n        const { updateItemInCart, cart } = props;\n        const { focusItem } = state;\n\n        if (focusItem === null) return;\n        const hasOptions = focusItem.options.length !== 0;\n\n        return hasOptions ? (\n            // `Name` is being used here because GraphQL does not allow\n            // filtering products by id, and sku is unreliable without\n            // a reference to the base product. Additionally, `url-key`\n            // cannot be used because we don't have page context in cart.\n            <Query\n                query={getProductDetailByName}\n                variables={{ name: focusItem.name, onServer: false }}\n            >\n                {({ loading, error, data }) => {\n                    if (error) return <div>Data Fetch Error</div>;\n                    if (loading) return loadingIndicator;\n\n                    const itemWithOptions = data.products.items[0];\n\n                    return (\n                        <CartOptions\n                            cartItem={focusItem}\n                            configItem={itemWithOptions}\n                            closeOptionsDrawer={closeOptionsDrawer}\n                            isUpdatingItem={cart.isUpdatingItem}\n                            updateCart={updateItemInCart}\n                        />\n                    );\n                }}\n            </Query>\n        ) : (\n            <CartOptions\n                cartItem={focusItem}\n                configItem={{}}\n                closeOptionsDrawer={closeOptionsDrawer}\n                isUpdatingItem={cart.isUpdatingItem}\n                updateCart={updateItemInCart}\n            />\n        );\n    }\n\n    openOptionsDrawer = item => {\n        this.setState({\n            focusItem: item\n        });\n        this.props.openOptionsDrawer();\n    };\n\n    closeOptionsDrawer = () => {\n        this.props.closeOptionsDrawer();\n    };\n\n    get miniCartInner() {\n        const { checkout, productList, props } = this;\n        const { classes, isCartEmpty, isMiniCartMaskOpen } = props;\n\n        if (isCartEmpty) {\n            return <EmptyMiniCart />;\n        }\n\n        const footer = checkout;\n\n        const footerClassName = isMiniCartMaskOpen\n            ? classes.footerMaskOpen\n            : classes.footer;\n\n        return (\n            <Fragment>\n                <div className={classes.body}>{productList}</div>\n                <div className={footerClassName}>{footer}</div>\n            </Fragment>\n        );\n    }\n\n    render() {\n        const { miniCartInner, productOptions, props } = this;\n        const {\n            cancelCheckout,\n            cart: { isOptionsDrawerOpen, isLoading },\n            classes,\n            isMiniCartMaskOpen,\n            isOpen\n        } = props;\n\n        const className = isOpen ? classes.root_open : classes.root;\n        const body = isOptionsDrawerOpen ? productOptions : miniCartInner;\n        const title = isOptionsDrawerOpen ? 'Edit Cart Item' : 'Shopping Cart';\n\n        return (\n            <aside className={className}>\n                <div className={classes.header}>\n                    <h2 className={classes.title}>\n                        <span>{title}</span>\n                    </h2>\n                    <Trigger>\n                        <Icon src={CloseIcon} />\n                    </Trigger>\n                </div>\n                {isLoading ? loadingIndicator : body}\n                <Mask isActive={isMiniCartMaskOpen} dismiss={cancelCheckout} />\n            </aside>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const { cart } = state;\n\n    return {\n        cart,\n        isCartEmpty: isEmptyCartVisible(state),\n        isMiniCartMaskOpen: isMiniCartMaskOpen(state)\n    };\n};\n\nconst mapDispatchToProps = {\n    getCartDetails,\n    updateItemInCart,\n    removeItemFromCart,\n    openOptionsDrawer,\n    closeOptionsDrawer,\n    cancelCheckout\n};\n\nexport default compose(\n    classify(defaultClasses),\n    connect(\n        mapStateToProps,\n        mapDispatchToProps\n    )\n)(MiniCart);\n"],"file":"miniCart.js"}