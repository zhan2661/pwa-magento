{"version":3,"sources":["../../../src/components/SearchBar/autocomplete.js"],"names":["React","Component","PropTypes","debounce","Query","classify","loadingIndicator","SuggestedCategories","SuggestedProducts","PRODUCT_SEARCH","defaultClasses","debounceTimeout","suggestedCategoriesLimit","suggestedProductsLimit","SearchAutocomplete","constructor","props","prevProps","searchQuery","setState","isQueryUpdating","updateAutocompleteQuery","value","autocompleteQuery","event","preventDefault","id","currentTarget","dataset","srcElement","updateAutocompleteVisible","executeSearch","state","history","mapProducts","products","map","product","small_image","url","render","classes","autocompleteVisible","handleOnProductOpen","handleCategorySearch","length","inputText","loading","error","data","root","statusContent","filters","items","categoryFilter","find","filter","name","categorySuggestions","slice","shape","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash.debounce';\nimport { Query } from 'src/drivers';\n\nimport classify from 'src/classify';\nimport { loadingIndicator } from 'src/components/LoadingIndicator';\nimport SuggestedCategories from './suggestedCategories';\nimport SuggestedProducts from './suggestedProducts';\nimport PRODUCT_SEARCH from '../../queries/productSearch.graphql';\n\nimport defaultClasses from './autocomplete.css';\n\nconst debounceTimeout = 200;\nconst suggestedCategoriesLimit = 4;\nconst suggestedProductsLimit = 3;\n\nclass SearchAutocomplete extends Component {\n    static propTypes = {\n        classes: PropTypes.shape({\n            root: PropTypes.string,\n            statusContent: PropTypes.string\n        }),\n        searchQuery: PropTypes.string.isRequired,\n        autocompleteVisible: PropTypes.bool,\n        executeSearch: PropTypes.func.isRequired,\n        updateAutocompleteVisible: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isQueryUpdating: false,\n            autocompleteQuery: props.searchQuery || ''\n        };\n    }\n\n    componentDidUpdate = prevProps => {\n        const { searchQuery } = this.props;\n\n        if (prevProps.searchQuery !== searchQuery) {\n            this.setState({ isQueryUpdating: true });\n            this.updateAutocompleteQuery(searchQuery);\n        }\n    };\n\n    /* Debounce this update in order to avoid multiple autocomplete query calls */\n    updateAutocompleteQuery = debounce(value => {\n        this.setState({\n            autocompleteQuery: value,\n            isQueryUpdating: false\n        });\n    }, debounceTimeout);\n\n    handleCategorySearch = event => {\n        event.preventDefault();\n        const { id } = event.currentTarget.dataset || event.srcElement.dataset;\n        this.props.updateAutocompleteVisible(false);\n        this.props.executeSearch(\n            this.state.autocompleteQuery,\n            this.props.history,\n            id\n        );\n    };\n\n    handleOnProductOpen = () => this.props.updateAutocompleteVisible(false);\n\n    // map Magento 2.3.1 schema changes to Venia 2.0.0 proptype shape to maintain backwards compatibility\n    mapProducts(products) {\n        return products.map(product => {\n            const { small_image } = product;\n            return {\n                ...product,\n                small_image:\n                    typeof small_image === 'object'\n                        ? small_image.url\n                        : small_image\n            };\n        });\n    }\n\n    render() {\n        const { classes, autocompleteVisible } = this.props;\n        const { handleOnProductOpen, handleCategorySearch } = this;\n        const { autocompleteQuery, isQueryUpdating } = this.state;\n\n        if (!autocompleteVisible || autocompleteQuery.length < 3) return null;\n\n        return (\n            <Query\n                query={PRODUCT_SEARCH}\n                variables={{\n                    inputText: autocompleteQuery\n                }}\n            >\n                {({ loading, error, data }) => {\n                    if (error)\n                        return (\n                            <div className={classes.root}>\n                                <div className={classes.statusContent}>\n                                    Data Fetch Error\n                                </div>\n                            </div>\n                        );\n                    if (loading || isQueryUpdating)\n                        return (\n                            <div className={classes.root}>\n                                <div className={classes.statusContent}>\n                                    {loadingIndicator}\n                                </div>\n                            </div>\n                        );\n\n                    const { filters, items } = data.products;\n\n                    if (items.length <= 0)\n                        return (\n                            <div className={classes.root}>\n                                <div className={classes.statusContent}>\n                                    No results found, try a different search\n                                </div>\n                            </div>\n                        );\n\n                    const categoryFilter = filters.find(\n                        filter => filter.name === 'Category'\n                    );\n\n                    const categorySuggestions = categoryFilter[\n                        'filter_items'\n                    ].slice(0, suggestedCategoriesLimit);\n\n                    return (\n                        <div className={classes.root}>\n                            <SuggestedCategories\n                                handleCategorySearch={handleCategorySearch}\n                                autocompleteQuery={autocompleteQuery}\n                                categorySuggestions={categorySuggestions}\n                            />\n                            <SuggestedProducts\n                                handleOnProductOpen={handleOnProductOpen}\n                                items={this.mapProducts(\n                                    items.slice(0, suggestedProductsLimit)\n                                )}\n                            />\n                        </div>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(SearchAutocomplete);\n"],"file":"autocomplete.js"}