{"version":3,"sources":["../../../src/components/SearchBar/searchBar.js"],"names":["React","Component","Form","bool","func","object","shape","string","getQueryParameterValue","SEARCH_QUERY_PARAMETER","SearchAutocomplete","Icon","ClearIcon","SearchIcon","TextInput","Trigger","classify","defaultClasses","initialValues","search_query","clearIcon","searchIcon","SearchBar","constructor","props","document","removeEventListener","autocompleteClick","e","searchRef","current","contains","target","autocompleteRef","updateAutocompleteVisible","visible","setState","autocompleteVisible","values","dirty","state","executeSearch","history","formApi","reset","createRef","componentDidMount","searchValueFromQueryString","location","queryParameter","addEventListener","setValue","componentDidUpdate","prevProps","isOpen","querySelector","focus","resetButton","resetForm","render","classes","className","root_open","root","getState","searchQuery","searchInner","form","setApi","handleChange","handleSubmit","inputFocus","handleInputChange","SearchAutocompleteWrapper","clearIcon_off","searchBlock","searchBlockOpen","searchBar","isRequired","match"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form } from 'informed';\nimport { bool, func, object, shape, string } from 'prop-types';\nimport getQueryParameterValue from '../../util/getQueryParameterValue';\nimport { SEARCH_QUERY_PARAMETER } from '../../RootComponents/Search/consts';\nimport SearchAutocomplete from './autocomplete';\nimport Icon from 'src/components/Icon';\nimport ClearIcon from 'react-feather/dist/icons/x';\nimport SearchIcon from 'react-feather/dist/icons/search';\nimport TextInput from 'src/components/TextInput';\nimport Trigger from 'src/components/Trigger';\n\nimport classify from 'src/classify';\nimport defaultClasses from './searchBar.css';\n\nconst initialValues = {\n    search_query: ''\n};\n\nconst clearIcon = <Icon src={ClearIcon} size={18} />;\nconst searchIcon = <Icon src={SearchIcon} size={18} />;\n\n// TODO: remove export here (update story and test)\nexport class SearchBar extends Component {\n    static propTypes = {\n        classes: shape({\n            clearIcon: string,\n            clearIcon_off: string,\n            root: string,\n            searchBlock: string,\n            searchBlockOpen: string,\n            searchBar: string,\n            searchIcon: string\n        }),\n        executeSearch: func.isRequired,\n        history: object,\n        isOpen: bool,\n        location: object,\n        match: object\n    };\n\n    constructor(props) {\n        super(props);\n        this.searchRef = React.createRef();\n        this.autocompleteRef = React.createRef();\n        this.state = {\n            dirty: false,\n            autocompleteVisible: false\n        };\n    }\n\n    componentWillUnmount = () => {\n        document.removeEventListener(\n            'mousedown',\n            this.autocompleteClick,\n            false\n        );\n    };\n\n    componentDidMount() {\n        const searchValueFromQueryString = getQueryParameterValue({\n            location: this.props.location,\n            queryParameter: SEARCH_QUERY_PARAMETER\n        });\n\n        document.addEventListener('mousedown', this.autocompleteClick, false);\n        this.formApi.setValue('search_query', searchValueFromQueryString);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.isOpen !== prevProps.isOpen) {\n            this.searchRef.current.querySelector('input').focus();\n        }\n    }\n\n    autocompleteClick = e => {\n        if (\n            this.searchRef.current.contains(e.target) ||\n            this.autocompleteRef.current.contains(e.target)\n        )\n            return;\n        this.updateAutocompleteVisible(false);\n    };\n\n    inputFocus = () => {\n        this.updateAutocompleteVisible(true);\n    };\n\n    get resetButton() {\n        const { resetForm, state } = this;\n\n        return state.dirty && <Trigger action={resetForm}>{clearIcon}</Trigger>;\n    }\n\n    updateAutocompleteVisible = visible => {\n        this.setState({\n            autocompleteVisible: visible\n        });\n    };\n\n    handleChange = ({ values }) => {\n        const dirty = !!values.search_query;\n        dirty !== this.state.dirty && this.setState({ dirty });\n    };\n\n    handleInputChange = () => this.updateAutocompleteVisible(true);\n\n    handleSubmit = ({ search_query }) => {\n        if (search_query) {\n            this.props.executeSearch(search_query, this.props.history);\n            this.updateAutocompleteVisible(false);\n        }\n    };\n\n    resetForm = () => {\n        this.updateAutocompleteVisible(false);\n        this.formApi.reset();\n    };\n\n    setApi = formApi => {\n        this.formApi = formApi;\n    };\n\n    render() {\n        const { props, resetButton, formApi } = this;\n        const { autocompleteVisible } = this.state;\n        const { classes, isOpen } = props;\n        const className = isOpen ? classes.root_open : classes.root;\n\n        const { values } = (formApi && formApi.getState()) || {};\n        const searchQuery = (values && values.search_query) || '';\n\n        return (\n            <div className={className}>\n                <div className={classes.searchInner} ref={this.searchRef}>\n                    <Form\n                        className={classes.form}\n                        getApi={this.setApi}\n                        autoComplete=\"off\"\n                        initialValues={initialValues}\n                        onChange={this.handleChange}\n                        onSubmit={this.handleSubmit}\n                    >\n                        <TextInput\n                            field=\"search_query\"\n                            onFocus={this.inputFocus}\n                            onChange={this.handleInputChange}\n                            after={resetButton}\n                            before={searchIcon}\n                        />\n\n                        <div\n                            className={classes.SearchAutocompleteWrapper}\n                            ref={this.autocompleteRef}\n                        >\n                            <SearchAutocomplete\n                                searchQuery={searchQuery}\n                                updateAutocompleteVisible={\n                                    this.updateAutocompleteVisible\n                                }\n                                autocompleteVisible={autocompleteVisible}\n                                executeSearch={this.props.executeSearch}\n                                history={this.props.history}\n                            />\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default classify(defaultClasses)(SearchBar);\n"],"file":"searchBar.js"}