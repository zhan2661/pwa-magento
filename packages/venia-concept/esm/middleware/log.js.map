{"version":3,"sources":["../../src/middleware/log.js"],"names":["log","store","next","action","result","console","groupCollapsed","type","group","payload","groupEnd","getState"],"mappings":"AAAA;;;;;;;AAOA,MAAMA,GAAG,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACnC,QAAMC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAnB;AAEAE,EAAAA,OAAO,CAACC,cAAR,CAAuBH,MAAM,CAACI,IAA9B;AACAF,EAAAA,OAAO,CAACG,KAAR,CAAc,SAAd;AACAH,EAAAA,OAAO,CAACL,GAAR,CAAYG,MAAM,CAACM,OAAnB;AACAJ,EAAAA,OAAO,CAACK,QAAR;AACAL,EAAAA,OAAO,CAACG,KAAR,CAAc,YAAd;AACAH,EAAAA,OAAO,CAACL,GAAR,CAAYC,KAAK,CAACU,QAAN,EAAZ;AACAN,EAAAA,OAAO,CAACK,QAAR;AACAL,EAAAA,OAAO,CAACK,QAAR;AAEA,SAAON,MAAP;AACH,CAbD;;AAeA,eAAeJ,GAAf","sourcesContent":["/**\n * Log actions and state to the browser console.\n * This function adheres to Redux's middleware pattern.\n *\n * @param {Store} store The store to augment.\n * @returns {Function}\n */\nconst log = store => next => action => {\n    const result = next(action);\n\n    console.groupCollapsed(action.type);\n    console.group('payload');\n    console.log(action.payload);\n    console.groupEnd();\n    console.group('next state');\n    console.log(store.getState());\n    console.groupEnd();\n    console.groupEnd();\n\n    return result;\n};\n\nexport default log;\n"],"file":"log.js"}