{"version":3,"sources":["../../src/reducers/user.js"],"names":["handleActions","Util","BrowserPersistence","storage","actions","name","isSignedIn","getItem","initialState","currentUser","email","firstname","lastname","forgotPassword","isInProgress","signInError","reducerMap","signIn","receive","state","payload","error","createAccountError","resetSignInError","resetCreateAccountError","resetPassword","request","completePasswordReset","reset"],"mappings":"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","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport { Util } from '@magento/peregrine';\nconst { BrowserPersistence } = Util;\n\nconst storage = new BrowserPersistence();\n\nimport actions from 'src/actions/user';\n\nexport const name = 'user';\n\nconst isSignedIn = () => !!storage.getItem('signin_token');\n\nconst initialState = {\n    currentUser: {\n        email: '',\n        firstname: '',\n        lastname: ''\n    },\n    isSignedIn: isSignedIn(),\n    forgotPassword: {\n        email: '',\n        isInProgress: false\n    },\n    signInError: {}\n};\n\nconst reducerMap = {\n    [actions.signIn.receive]: (state, { payload, error }) => {\n        if (error) {\n            return initialState;\n        }\n\n        return {\n            ...state,\n            isSignedIn: true,\n            currentUser: payload\n        };\n    },\n    [actions.signInError.receive]: (state, { payload }) => {\n        return {\n            ...state,\n            isSignedIn: false,\n            signInError: payload\n        };\n    },\n    [actions.createAccountError.receive]: (state, { payload }) => {\n        return {\n            ...state,\n            createAccountError: payload\n        };\n    },\n    [actions.resetSignInError.receive]: state => {\n        return {\n            ...state,\n            signInError: {}\n        };\n    },\n    [actions.resetCreateAccountError.receive]: state => {\n        return {\n            ...state,\n            createAccountError: {}\n        };\n    },\n    [actions.resetPassword.request]: (state, { payload }) => {\n        return {\n            ...state,\n            forgotPassword: {\n                email: payload,\n                isInProgress: true\n            }\n        };\n    },\n    // TODO: handle the reset password response from the API.\n    [actions.resetPassword.receive]: state => state,\n    [actions.completePasswordReset]: (state, { payload }) => {\n        const { email } = payload;\n\n        return {\n            ...state,\n            forgotPassword: {\n                email,\n                isInProgress: false\n            }\n        };\n    },\n    [actions.signIn.reset]: () => {\n        return {\n            ...initialState,\n            isSignedIn: isSignedIn()\n        };\n    }\n};\n\nexport default handleActions(reducerMap, initialState);\n"],"file":"user.js"}