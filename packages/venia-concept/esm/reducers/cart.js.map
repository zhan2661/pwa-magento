{"version":3,"sources":["../../src/reducers/cart.js"],"names":["handleActions","actions","checkoutActions","name","initialState","details","guestCartId","isLoading","isOptionsDrawerOpen","isUpdatingItem","isAddingItem","paymentMethods","shippingMethods","totals","reducerMap","getGuestCart","receive","state","payload","error","getDetails","request","addItem","updateItem","removeItem","cartItemCount","openOptionsDrawer","closeOptionsDrawer","order","accept"],"mappings":"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","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport actions from 'src/actions/cart';\nimport checkoutActions from 'src/actions/checkout';\n\nexport const name = 'cart';\n\nexport const initialState = {\n    details: {},\n    guestCartId: null,\n    isLoading: false,\n    isOptionsDrawerOpen: false,\n    isUpdatingItem: false,\n    isAddingItem: false,\n    paymentMethods: [],\n    shippingMethods: [],\n    totals: {}\n};\n\nconst reducerMap = {\n    [actions.getGuestCart.receive]: (state, { payload, error }) => {\n        if (error) {\n            return initialState;\n        }\n\n        return {\n            ...state,\n            guestCartId: payload\n        };\n    },\n    [actions.getDetails.request]: (state, { payload }) => {\n        return {\n            ...state,\n            guestCartId: payload,\n            isLoading: true\n        };\n    },\n    [actions.getDetails.receive]: (state, { payload, error }) => {\n        if (error) {\n            return {\n                ...state,\n                isLoading: false,\n                guestCartId: null\n            };\n        }\n\n        return {\n            ...state,\n            ...payload,\n            isLoading: false\n        };\n    },\n    [actions.addItem.request]: state => {\n        return {\n            ...state,\n            isAddingItem: true\n        };\n    },\n    [actions.addItem.receive]: state => {\n        return {\n            ...state,\n            isAddingItem: false\n        };\n    },\n    [actions.updateItem.request]: (state, { payload, error }) => {\n        if (error) {\n            return initialState;\n        }\n        return {\n            ...state,\n            ...payload,\n            isUpdatingItem: true\n        };\n    },\n    [actions.updateItem.receive]: state => {\n        // We don't actually have to update any items here\n        // because we force a refresh from the server.\n        return {\n            ...state,\n            isUpdatingItem: false\n        };\n    },\n    [actions.removeItem.receive]: (state, { payload, error }) => {\n        if (error) {\n            return initialState;\n        }\n        // If we are emptying the cart, perform a reset to prevent\n        // a bug where the next item added to cart would have a price of 0\n        if (payload.cartItemCount == 1) {\n            return initialState;\n        }\n        return {\n            ...state,\n            ...payload\n        };\n    },\n    [actions.openOptionsDrawer]: state => {\n        return {\n            ...state,\n            isOptionsDrawerOpen: true\n        };\n    },\n    [actions.closeOptionsDrawer]: state => {\n        return {\n            ...state,\n            isOptionsDrawerOpen: false\n        };\n    },\n    [checkoutActions.order.accept]: () => {\n        return initialState;\n    }\n};\n\nexport default handleActions(reducerMap, initialState);\n"],"file":"cart.js"}