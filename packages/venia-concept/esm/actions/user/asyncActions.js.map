{"version":3,"sources":["../../../src/actions/user/asyncActions.js"],"names":["RestApi","Util","removeGuestCart","refresh","request","Magento2","BrowserPersistence","actions","signIn","credentials","thunk","args","dispatch","resetSignInError","body","username","password","response","method","JSON","stringify","setToken","userDetails","receive","error","signInError","signOut","history","reset","getUserDetails","getState","user","isSignedIn","createNewUserRequest","accountInfo","resetCreateAccountError","customer","email","assignGuestCartToCustomer","createAccountError","createAccount","e","storage","guestCartId","getItem","payload","customerId","id","storeId","store_id","console","log","resetPassword","Promise","resolve","completePasswordReset","token","setItem"],"mappings":"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","sourcesContent":["import { RestApi } from '@magento/peregrine';\nimport { Util } from '@magento/peregrine';\nimport { removeGuestCart } from 'src/actions/cart';\nimport { refresh } from 'src/util/router-helpers';\n\nconst { request } = RestApi.Magento2;\nconst { BrowserPersistence } = Util;\n\nimport actions from './actions';\n\nexport const signIn = credentials =>\n    async function thunk(...args) {\n        const [dispatch] = args;\n\n        dispatch(actions.resetSignInError.request());\n\n        try {\n            const body = {\n                // username: 'roni_cost@example.com',\n                // password: 'roni_cost3@example.com'\n                username: credentials.username,\n                password: credentials.password\n            };\n\n            const response = await request(\n                '/rest/V1/integration/customer/token',\n                {\n                    method: 'POST',\n                    body: JSON.stringify(body)\n                }\n            );\n\n            setToken(response);\n\n            const userDetails = await request('/rest/V1/customers/me', {\n                method: 'GET'\n            });\n\n            dispatch(actions.signIn.receive(userDetails));\n        } catch (error) {\n            dispatch(actions.signInError.receive(error));\n        }\n    };\n\nexport const signOut = ({ history }) => dispatch => {\n    setToken(null);\n\n    dispatch(actions.signIn.reset());\n\n    refresh({ history });\n};\n\nexport const getUserDetails = () =>\n    async function thunk(...args) {\n        const [dispatch, getState] = args;\n        const { user } = getState();\n        if (user.isSignedIn) {\n            dispatch(actions.resetSignInError.request());\n            try {\n                const userDetails = await request('/rest/V1/customers/me', {\n                    method: 'GET'\n                });\n                dispatch(actions.signIn.receive(userDetails));\n            } catch (error) {\n                dispatch(actions.signInError.receive(error));\n            }\n        }\n    };\n\nexport const createNewUserRequest = accountInfo =>\n    async function thunk(...args) {\n        const [dispatch] = args;\n\n        dispatch(actions.resetCreateAccountError.request());\n\n        try {\n            await request('/rest/V1/customers', {\n                method: 'POST',\n                body: JSON.stringify(accountInfo)\n            });\n            await dispatch(\n                signIn({\n                    username: accountInfo.customer.email,\n                    password: accountInfo.password\n                })\n            );\n            dispatch(assignGuestCartToCustomer());\n        } catch (error) {\n            dispatch(actions.createAccountError.receive(error));\n\n            /*\n             * Throw error again to notify async action which dispatched handleCreateAccount.\n             */\n            throw error;\n        }\n    };\n\nexport const createAccount = accountInfo => async dispatch => {\n    /*\n     * Server validation error is handled in handleCreateAccount.\n     * We set createAccountError in Redux and throw error again\n     * to notify redux-thunk action which dispatched handleCreateAccount action.\n     */\n    try {\n        await dispatch(createNewUserRequest(accountInfo));\n    } catch (e) {}\n};\n\nexport const assignGuestCartToCustomer = () =>\n    async function thunk(...args) {\n        const [dispatch, getState] = args;\n        const { user } = getState();\n\n        try {\n            const storage = new BrowserPersistence();\n            const guestCartId = storage.getItem('guestCartId');\n            const payload = {\n                customerId: user.id,\n                storeId: user.store_id\n            };\n            // TODO: Check if guestCartId exists\n            await request(`/rest/V1/guest-carts/${guestCartId}`, {\n                method: 'PUT',\n                body: JSON.stringify(payload)\n            });\n            dispatch(removeGuestCart());\n        } catch (error) {\n            // TODO: Handle error\n            console.log(error);\n        }\n    };\n\nexport const resetPassword = ({ email }) =>\n    async function thunk(...args) {\n        const [dispatch] = args;\n\n        dispatch(actions.resetPassword.request(email));\n\n        // TODO: actually make the call to the API.\n        // For now, just return a resolved promise.\n        const response = await Promise.resolve(email);\n\n        dispatch(actions.resetPassword.receive(response));\n    };\n\nexport const completePasswordReset = email => async dispatch =>\n    dispatch(actions.completePasswordReset(email));\n\nasync function setToken(token) {\n    const storage = new BrowserPersistence();\n    // TODO: Get correct token expire time from API\n    storage.setItem('signin_token', token, 3600);\n}\n"],"file":"asyncActions.js"}