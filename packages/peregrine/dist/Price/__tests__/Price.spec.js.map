{"version":3,"sources":["../../../src/Price/__tests__/Price.spec.js"],"names":["React","Fragment","shallow","Price","IntlPolyfill","global","Intl","NumberFormat","prototype","formatToParts","require","test","wrapper","expect","equals","toBe","classes","currency","integer","decimal","fraction"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,YAAP,MAAyB,MAAzB;;AAEA,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYC,YAAZ,CAAyBC,SAAzB,CAAmCC,aAAxC,EAAuD;AACnDJ,EAAAA,MAAM,CAACC,IAAP,GAAcF,YAAd;;AACAM,EAAAA,OAAO,CAAC,8BAAD,CAAP;AACH;;AAEDC,IAAI,CAAC,qBAAD,EAAwB,YAAM;AAC9B,MAAMC,OAAO,GAAGV,OAAO,CAAC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,MAAd;AAAsB,IAAA,YAAY,EAAC;AAAnC,IAAD,CAAvB;AACAW,EAAAA,MAAM,CACFD,OAAO,CAACE,MAAR,CACI,oBAAC,QAAD,QACI,sCADJ,EAEI,wCAFJ,EAGI,sCAHJ,EAII,uCAJJ,CADJ,CADE,CAAN,CASEC,IATF,CASO,IATP;AAUH,CAZG,CAAJ;AAcAJ,IAAI,CAAC,qBAAD,EAAwB,YAAM;AAC9B,MAAMC,OAAO,GAAGV,OAAO,CAAC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,MAAd;AAAsB,IAAA,YAAY,EAAC;AAAnC,IAAD,CAAvB;AACAW,EAAAA,MAAM,CACFD,OAAO,CAACE,MAAR,CACI,oBAAC,QAAD,QACI,2CADJ,EAEI,wCAFJ,EAGI,sCAHJ,EAII,uCAJJ,CADJ,CADE,CAAN,CASEC,IATF,CASO,IATP;AAUH,CAZG,CAAJ;AAcAJ,IAAI,CAAC,wCAAD,EAA2C,YAAM;AACjD,MAAMK,OAAO,GAAG;AACZC,IAAAA,QAAQ,EAAE,MADE;AAEZC,IAAAA,OAAO,EAAE,KAFG;AAGZC,IAAAA,OAAO,EAAE,KAHG;AAIZC,IAAAA,QAAQ,EAAE;AAJE,GAAhB;AAMA,MAAMR,OAAO,GAAGV,OAAO,CACnB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,KAAd;AAAqB,IAAA,YAAY,EAAC,KAAlC;AAAwC,IAAA,OAAO,EAAEc;AAAjD,IADmB,CAAvB;AAGAH,EAAAA,MAAM,CACFD,OAAO,CAACE,MAAR,CACI,oBAAC,QAAD,QACI;AAAM,IAAA,SAAS,EAAC;AAAhB,SADJ,EAEI;AAAM,IAAA,SAAS,EAAC;AAAhB,UAFJ,EAGI;AAAM,IAAA,SAAS,EAAC;AAAhB,SAHJ,EAII;AAAM,IAAA,SAAS,EAAC;AAAhB,UAJJ,CADJ,CADE,CAAN,CASEC,IATF,CASO,IATP;AAUH,CApBG,CAAJ","sourcesContent":["import React, { Fragment } from 'react';\nimport { shallow } from 'enzyme';\nimport Price from '../Price';\nimport IntlPolyfill from 'intl';\n\nif (!global.Intl.NumberFormat.prototype.formatToParts) {\n    global.Intl = IntlPolyfill;\n    require('intl/locale-data/jsonp/en.js');\n}\n\ntest('Renders a USD price', () => {\n    const wrapper = shallow(<Price value={100.99} currencyCode=\"USD\" />);\n    expect(\n        wrapper.equals(\n            <Fragment>\n                <span>$</span>\n                <span>100</span>\n                <span>.</span>\n                <span>99</span>\n            </Fragment>\n        )\n    ).toBe(true);\n});\n\ntest('Renders a EUR price', () => {\n    const wrapper = shallow(<Price value={100.99} currencyCode=\"EUR\" />);\n    expect(\n        wrapper.equals(\n            <Fragment>\n                <span>â‚¬</span>\n                <span>100</span>\n                <span>.</span>\n                <span>99</span>\n            </Fragment>\n        )\n    ).toBe(true);\n});\n\ntest('Allows custom classnames for each part', () => {\n    const classes = {\n        currency: 'curr',\n        integer: 'int',\n        decimal: 'dec',\n        fraction: 'fract'\n    };\n    const wrapper = shallow(\n        <Price value={88.81} currencyCode=\"USD\" classes={classes} />\n    );\n    expect(\n        wrapper.equals(\n            <Fragment>\n                <span className=\"curr\">$</span>\n                <span className=\"int\">88</span>\n                <span className=\"dec\">.</span>\n                <span className=\"fract\">81</span>\n            </Fragment>\n        )\n    ).toBe(true);\n});\n"],"file":"Price.spec.js"}