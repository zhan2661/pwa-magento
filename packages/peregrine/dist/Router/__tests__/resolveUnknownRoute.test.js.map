{"version":3,"sources":["../../../src/Router/__tests__/resolveUnknownRoute.test.js"],"names":["resolveUnknownRoute","urlResolverRes","type","id","JSON","stringify","data","urlResolver","NotFoundManifest","NotFound","rootChunkID","rootModuleID","pageTypes","mockManifest","Category","Product","cachedResponse","parse","isOnline","_value","get","set","v","Object","defineProperty","navigator","clearLocalStorage","item","localStorage","setItem","beforeEach","onLine","document","body","innerHTML","preloadDone","fetch","resetMocks","test","setAttribute","route","apiBase","res","expect","toMatchObject","removeAttribute","mockResponseOnce","__tmp_webpack_public_path__","toHaveProperty","url","getItem","not","toBeNull","toHaveBeenCalledTimes","preloadRes","toHaveBeenCalled"],"mappings":"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","sourcesContent":["import resolveUnknownRoute from '../resolveUnknownRoute';\n\nconst urlResolverRes = (type, id) =>\n    JSON.stringify({\n        data: {\n            urlResolver: { type, id }\n        }\n    });\n\nconst NotFoundManifest = {\n    NotFound: {\n        rootChunkID: -1,\n        rootModuleID: 100,\n        pageTypes: ['NOTFOUND']\n    }\n};\n\nconst mockManifest = {\n    Category: {\n        rootChunkID: 2,\n        rootModuleID: 100,\n        pageTypes: ['CATEGORY']\n    },\n    Product: {\n        rootChunkID: 1,\n        rootModuleID: 99,\n        pageTypes: ['PRODUCT']\n    },\n    ...NotFoundManifest\n};\n\nconst cachedResponse = JSON.stringify({\n    'foo-bar.html': {\n        ...JSON.parse(urlResolverRes('PRODUCT'))\n    }\n});\n\nconst isOnline = _value => ({\n    get: () => _value,\n    set: v => (_value = v)\n});\n\nObject.defineProperty(navigator, 'onLine', isOnline(true));\n\nfunction clearLocalStorage(item) {\n    localStorage.setItem(item, null);\n}\n\nbeforeEach(() => {\n    navigator.onLine = true;\n    clearLocalStorage('urlResolve');\n    document.body.innerHTML = '';\n    resolveUnknownRoute.preloadDone = false;\n    fetch.resetMocks();\n});\n\ntest('Preload path: resolves directly from preload attributes', async () => {\n    document.body.setAttribute('data-model-type', 'CATEGORY');\n    document.body.setAttribute('data-model-id', '45');\n    const res = await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://example.com'\n    });\n    expect(res).toMatchObject({\n        type: 'CATEGORY',\n        id: 45\n    });\n    document.body.removeAttribute('data-model-type');\n    document.body.removeAttribute('data-model-id');\n});\n\ntest('Preload path: resolves directly from preload element', async () => {\n    document.body.innerHTML =\n        '<script type=\"application/json\" id=\"url-resolver\">{ \"type\": \"PRODUCT\", \"id\": \"VA-123\" }</script>';\n    const res = await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://example.com'\n    });\n    expect(res).toMatchObject({\n        type: 'PRODUCT',\n        id: 'VA-123'\n    });\n});\n\ntest('returns NOTFOUND when offline and requested content is not in cache ', async () => {\n    navigator.onLine = false;\n\n    fetch.mockResponseOnce(JSON.stringify(mockManifest));\n    const res = await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://store.com',\n        __tmp_webpack_public_path__: 'https://dev-server.com/pub'\n    });\n\n    expect(res).toHaveProperty('id', NotFoundManifest.NotFound.rootChunkID);\n});\n\ntest('stores response of urlResolver in cache', async () => {\n    fetch.mockResponseOnce(urlResolverRes('PRODUCT'));\n    fetch.mockResponseOnce(JSON.stringify(mockManifest));\n\n    const url = 'foo-bar.html';\n\n    await resolveUnknownRoute({\n        route: url,\n        apiBase: 'https://store.com',\n        __tmp_webpack_public_path__: 'https://dev-server.com/pub'\n    });\n\n    expect(localStorage.getItem('urlResolve')).not.toBeNull();\n});\n\ntest('does not call fetchRoute when response is cached', async () => {\n    localStorage.setItem('urlResolve', cachedResponse);\n\n    fetch.mockResponseOnce(JSON.stringify(mockManifest));\n    await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://store.com',\n        __tmp_webpack_public_path__: 'https://dev-server.com/pub'\n    });\n\n    expect(fetch).toHaveBeenCalledTimes(0);\n});\n\ntest('calls fetchRoute when response is not cached', async () => {\n    fetch.mockResponseOnce(urlResolverRes('PRODUCT'));\n    fetch.mockResponseOnce(JSON.stringify(mockManifest));\n    await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://store.com',\n        __tmp_webpack_public_path__: 'https://dev-server.com/pub'\n    });\n\n    expect(fetch).toHaveBeenCalledTimes(1);\n});\n\ntest('urlResolver path: resolve using fetch to GraphQL after one preload', async () => {\n    fetch.mockResponseOnce(urlResolverRes('PRODUCT', 'VA-11'));\n    document.body.innerHTML =\n        '<script type=\"application/json\" id=\"url-resolver\">{ \"type\": \"CMS_PAGE\", \"id\": \"1\" }</script>';\n    const preloadRes = await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://store.com'\n    });\n    expect(preloadRes).toMatchObject({\n        type: 'CMS_PAGE',\n        id: 1\n    });\n    expect(fetch).not.toHaveBeenCalled();\n    const res = await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://store.com'\n    });\n    expect(res).toMatchObject({\n        type: 'PRODUCT',\n        id: 'VA-11'\n    });\n    expect(fetch).toHaveBeenCalledTimes(1);\n});\n\ntest('Preload path: skips if preload element not found', async () => {\n    fetch.mockResponseOnce(urlResolverRes('CATEGORY', 2));\n    const res = await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://store.com'\n    });\n    expect(res).toMatchObject({\n        type: 'CATEGORY',\n        id: 2\n    });\n});\n\ntest('Preload path: skips if preload element unparseable', async () => {\n    document.body.innerHTML =\n        '<script type=\"application/json\" id=\"url-resolver\"> \"type\": \"CMS_PAGE\", \"id\": \"1\" }</script>';\n    fetch.mockResponseOnce(urlResolverRes('CATEGORY', 2));\n    const res = await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://store.com'\n    });\n    expect(res).toMatchObject({\n        type: 'CATEGORY',\n        id: 2\n    });\n});\n\ntest('Preload path: casts numbers to number', async () => {\n    document.body.innerHTML =\n        '<script type=\"application/json\" id=\"url-resolver\">{ \"type\": \"CMS_PAGE\", \"id\": \"1\" }</script>';\n    const res = await resolveUnknownRoute({\n        route: 'foo-bar.html',\n        apiBase: 'https://store.com'\n    });\n    expect(res).toMatchObject({\n        type: 'CMS_PAGE',\n        id: 1\n    });\n});\n"],"file":"resolveUnknownRoute.test.js"}