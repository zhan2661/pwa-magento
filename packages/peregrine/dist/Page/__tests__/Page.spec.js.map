{"version":3,"sources":["../../../src/Page/__tests__/Page.spec.js"],"names":["React","mount","RouteProvider","Page","jest","mock","context","one","test","wrapper","expect","find","props","toEqual","two"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,QAAtB;AAEA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEAC,IAAI,CAACC,IAAL,CAAU,kCAAV;AAEA,IAAMC,OAAO,GAAG;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAhB;AAEAC,IAAI,CAAC,qDAAD,EAAwD,YAAM;AAC9D;AACA,MAAMC,OAAO,GAAGR,KAAK,CACjB,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEK;AAAtB,KACI,oBAAC,IAAD,OADJ,CADiB,CAArB;AAMAI,EAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,qBAAb,EAAoCC,KAApC,EAAD,CAAN,CAAoDC,OAApD,CAA4DP,OAA5D;AACH,CATG,CAAJ;AAWAE,IAAI,CAAC,uCAAD,EAA0C,YAAM;AAChD,MAAMI,KAAK,GAAG;AAAEE,IAAAA,GAAG,EAAE;AAAP,GAAd,CADgD,CAGhD;;AACA,MAAML,OAAO,GAAGR,KAAK,CACjB,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEK;AAAtB,KACI,oBAAC,IAAD,EAAUM,KAAV,CADJ,CADiB,CAArB;AAMAF,EAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAa,qBAAb,EAAoCC,KAApC,EAAD,CAAN,CAAoDC,OAApD,mBACOD,KADP,EAEON,OAFP;AAIH,CAdG,CAAJ","sourcesContent":["import React from 'react';\nimport { mount } from 'enzyme';\n\nimport { RouteProvider } from '../../Router';\nimport Page from '../Page';\n\njest.mock('../../Router/MagentoRouteHandler');\n\nconst context = { one: 1 };\n\ntest('renders `MagentoRouteHandler` with context as props', () => {\n    // we need to test context consumer, so we can't shallow render\n    const wrapper = mount(\n        <RouteProvider value={context}>\n            <Page />\n        </RouteProvider>\n    );\n\n    expect(wrapper.find('MagentoRouteHandler').props()).toEqual(context);\n});\n\ntest('passes props to `MagentoRouteHandler`', () => {\n    const props = { two: 2 };\n\n    // we need to test context consumer, so we can't shallow render\n    const wrapper = mount(\n        <RouteProvider value={context}>\n            <Page {...props} />\n        </RouteProvider>\n    );\n\n    expect(wrapper.find('MagentoRouteHandler').props()).toEqual({\n        ...props,\n        ...context\n    });\n});\n"],"file":"Page.spec.js"}