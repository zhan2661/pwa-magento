{"version":3,"sources":["../../../src/validators/__tests__/iterable.spec.js"],"names":["iterable","name","props","b","c","d","e","Map","f","test","result","expect","toBeUndefined","isRequired","toBeInstanceOf","Error","thrower","toThrow"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,IAAMC,IAAI,GAAG,aAAb;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,CAAC,EAAE,IADO;AAEVC,EAAAA,CAAC,EAAE,EAFO;AAGVC,EAAAA,CAAC,EAAE,EAHO;AAIVC,EAAAA,CAAC,EAAE,IAAIC,GAAJ,EAJO;AAKVC,EAAAA,CAAC,EAAE;AALO,CAAd;AAQAC,IAAI,CAAC,sCAAD,EAAyC,YAAM;AAC/C,MAAMC,MAAM,GAAGV,QAAQ,CAACE,KAAD,EAAQ,GAAR,EAAaD,IAAb,CAAvB;AAEAU,EAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf;AACH,CAJG,CAAJ;AAMAH,IAAI,CAAC,mCAAD,EAAsC,YAAM;AAC5C,MAAMC,MAAM,GAAGV,QAAQ,CAACE,KAAD,EAAQ,GAAR,EAAaD,IAAb,CAAvB;AAEAU,EAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf;AACH,CAJG,CAAJ;AAMAH,IAAI,CAAC,oDAAD,EAAuD,YAAM;AAC7D,MAAMC,MAAM,GAAGV,QAAQ,CAACa,UAAT,CAAoBX,KAApB,EAA2B,GAA3B,EAAgCD,IAAhC,CAAf;AAEAU,EAAAA,MAAM,CAACD,MAAD,CAAN,CAAeI,cAAf,CAA8BC,KAA9B;AACH,CAJG,CAAJ;AAMAN,IAAI,CAAC,iDAAD,EAAoD,YAAM;AAC1D,MAAMC,MAAM,GAAGV,QAAQ,CAACa,UAAT,CAAoBX,KAApB,EAA2B,GAA3B,EAAgCD,IAAhC,CAAf;AAEAU,EAAAA,MAAM,CAACD,MAAD,CAAN,CAAeI,cAAf,CAA8BC,KAA9B;AACH,CAJG,CAAJ;AAMAN,IAAI,CAAC,qCAAD,EAAwC,YAAM;AAC9C,MAAMC,MAAM,GAAGV,QAAQ,CAACE,KAAD,EAAQ,GAAR,EAAaD,IAAb,CAAvB;AAEAU,EAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf;AACH,CAJG,CAAJ;AAMAH,IAAI,CAAC,qCAAD,EAAwC,YAAM;AAC9C,MAAMC,MAAM,GAAGV,QAAQ,CAACE,KAAD,EAAQ,GAAR,EAAaD,IAAb,CAAvB;AAEAU,EAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf;AACH,CAJG,CAAJ;AAMAH,IAAI,CAAC,kCAAD,EAAqC,YAAM;AAC3C,MAAMC,MAAM,GAAGV,QAAQ,CAACE,KAAD,EAAQ,GAAR,EAAaD,IAAb,CAAvB;AAEAU,EAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,aAAf;AACH,CAJG,CAAJ;AAMAH,IAAI,CAAC,0CAAD,EAA6C,YAAM;AACnD,MAAMC,MAAM,GAAGV,QAAQ,CAACE,KAAD,EAAQ,GAAR,EAAaD,IAAb,CAAvB;AAEAU,EAAAA,MAAM,CAACD,MAAD,CAAN,CAAeI,cAAf,CAA8BC,KAA9B;AACH,CAJG,CAAJ;AAMAN,IAAI,CAAC,+BAAD,EAAkC,YAAM;AACxC,MAAMC,MAAM,GAAGV,QAAQ,CAACE,KAAD,EAAQ,GAAR,EAAaD,IAAb,CAAvB;;AACA,MAAMe,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,UAAMN,MAAN;AACH,GAFD;;AAIAC,EAAAA,MAAM,CAACK,OAAD,CAAN,CAAgBC,OAAhB,CACI,mFADJ;AAGH,CATG,CAAJ","sourcesContent":["import iterable from '../iterable';\n\nconst name = 'MyComponent';\n\nconst props = {\n    b: null,\n    c: '',\n    d: [],\n    e: new Map(),\n    f: {}\n};\n\ntest('returns nothing if prop is undefined', () => {\n    const result = iterable(props, 'a', name);\n\n    expect(result).toBeUndefined();\n});\n\ntest('returns nothing if prop is `null`', () => {\n    const result = iterable(props, 'b', name);\n\n    expect(result).toBeUndefined();\n});\n\ntest('returns an error if required and prop is undefined', () => {\n    const result = iterable.isRequired(props, 'a', name);\n\n    expect(result).toBeInstanceOf(Error);\n});\n\ntest('returns an error if required and prop is `null`', () => {\n    const result = iterable.isRequired(props, 'b', name);\n\n    expect(result).toBeInstanceOf(Error);\n});\n\ntest('returns nothing if prop is a string', () => {\n    const result = iterable(props, 'c', name);\n\n    expect(result).toBeUndefined();\n});\n\ntest('returns nothing if prop is an array', () => {\n    const result = iterable(props, 'd', name);\n\n    expect(result).toBeUndefined();\n});\n\ntest('returns nothing if prop is a Map', () => {\n    const result = iterable(props, 'e', name);\n\n    expect(result).toBeUndefined();\n});\n\ntest('returns an error if prop is not iterable', () => {\n    const result = iterable(props, 'f', name);\n\n    expect(result).toBeInstanceOf(Error);\n});\n\ntest('returns a proper error object', () => {\n    const result = iterable(props, 'f', name);\n    const thrower = () => {\n        throw result;\n    };\n\n    expect(thrower).toThrow(\n        'Invalid prop `f` of type `object` supplied to `MyComponent`, expected `iterable`.'\n    );\n});\n"],"file":"iterable.spec.js"}