{"version":3,"sources":["../../src/List/items.js"],"names":["React","Component","Fragment","PropTypes","memoize","iterable","ListItem","removeFocus","hasFocus","updateCursor","index","cursor","updateSelection","key","prevState","props","selectionModel","selection","Set","add","has","delete","Items","setState","syncSelection","getItemKey","items","renderItem","state","children","Array","from","item","handleBlur","getClickHandler","getFocusHandler","onSelectionChange","func","isRequired","oneOfType","string","oneOf","id"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport memoize from '../util/unaryMemoize';\nimport iterable from '../validators/iterable';\nimport ListItem from './item';\n\nconst removeFocus = () => ({\n    hasFocus: false\n});\n\nconst updateCursor = memoize(index => () => ({\n    cursor: index,\n    hasFocus: true\n}));\n\nconst updateSelection = memoize(key => (prevState, props) => {\n    const { selectionModel } = props;\n    let selection;\n\n    if (selectionModel === 'radio') {\n        selection = new Set().add(key);\n    }\n\n    if (selectionModel === 'checkbox') {\n        selection = new Set(prevState.selection);\n\n        if (selection.has(key)) {\n            selection.delete(key);\n        } else {\n            selection.add(key);\n        }\n    }\n\n    return { selection };\n});\n\nclass Items extends Component {\n    static propTypes = {\n        getItemKey: PropTypes.func.isRequired,\n        items: iterable.isRequired,\n        renderItem: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n        selectionModel: PropTypes.oneOf(['checkbox', 'radio'])\n    };\n\n    static defaultProps = {\n        getItemKey: ({ id }) => id,\n        selectionModel: 'radio'\n    };\n\n    state = {\n        cursor: null,\n        hasFocus: false,\n        selection: new Set()\n    };\n\n    render() {\n        const { getItemKey, items, renderItem } = this.props;\n        const { cursor, hasFocus, selection } = this.state;\n\n        const children = Array.from(items, (item, index) => {\n            const key = getItemKey(item, index);\n\n            return (\n                <ListItem\n                    key={key}\n                    item={item}\n                    itemIndex={index}\n                    render={renderItem}\n                    hasFocus={hasFocus && cursor === index}\n                    isSelected={selection.has(key)}\n                    onBlur={this.handleBlur}\n                    onClick={this.getClickHandler(key)}\n                    onFocus={this.getFocusHandler(index)}\n                />\n            );\n        });\n\n        return <Fragment>{children}</Fragment>;\n    }\n\n    syncSelection() {\n        const { selection } = this.state;\n        const { onSelectionChange } = this.props;\n\n        if (onSelectionChange) {\n            onSelectionChange(selection);\n        }\n    }\n\n    handleBlur = () => {\n        this.setState(removeFocus);\n    };\n\n    getClickHandler = memoize(key => () => {\n        this.setState(updateSelection(key), this.syncSelection);\n    });\n\n    getFocusHandler = memoize(index => () => {\n        this.setState(updateCursor(index));\n    });\n}\n\nexport default Items;\n"],"file":"items.js"}