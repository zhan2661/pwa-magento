{"version":3,"sources":["../../src/List/list.js"],"names":["React","Component","PropTypes","fromRenderProp","iterable","Items","List","selection","onSelectionChange","props","classes","getItemKey","items","render","renderItem","selectionModel","restProps","customProps","Root","Object","keys","root","handleSelectionChange","shape","string","func","isRequired","oneOfType","oneOf","id"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA;;;;;IAIMC,I;;;;;;;;;;;;;;;;;;4EA4EsB,UAAAC,SAAS,EAAI;AAAA,UACzBC,iBADyB,GACH,MAAKC,KADF,CACzBD,iBADyB;;AAGjC,UAAIA,iBAAJ,EAAuB;AACnBA,QAAAA,iBAAiB,CAACD,SAAD,CAAjB;AACH;AACJ,K;;;;;;;6BAzCQ;AAAA,wBAUD,KAAKE,KAVJ;AAAA,UAEDC,OAFC,eAEDA,OAFC;AAAA,UAGDC,UAHC,eAGDA,UAHC;AAAA,UAIDC,KAJC,eAIDA,KAJC;AAAA,UAKDC,MALC,eAKDA,MALC;AAAA,UAMDC,UANC,eAMDA,UANC;AAAA,UAODN,iBAPC,eAODA,iBAPC;AAAA,UAQDO,cARC,eAQDA,cARC;AAAA,UASEC,SATF;;AAYL,UAAMC,WAAW,GAAG;AAChBP,QAAAA,OAAO,EAAPA,OADgB;AAEhBC,QAAAA,UAAU,EAAVA,UAFgB;AAGhBC,QAAAA,KAAK,EAALA,KAHgB;AAIhBJ,QAAAA,iBAAiB,EAAjBA,iBAJgB;AAKhBO,QAAAA,cAAc,EAAdA;AALgB,OAApB;AAQA,UAAMG,IAAI,GAAGf,cAAc,CAACU,MAAD,EAASM,MAAM,CAACC,IAAP,CAAYH,WAAZ,CAAT,CAA3B;AAEA,aACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEP,OAAO,CAACW;AAAzB,SAAmCJ,WAAnC,EAAoDD,SAApD,GACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAEJ,KADX;AAEI,QAAA,UAAU,EAAED,UAFhB;AAGI,QAAA,UAAU,EAAEG,UAHhB;AAII,QAAA,cAAc,EAAEC,cAJpB;AAKI,QAAA,iBAAiB,EAAE,KAAKO;AAL5B,QADJ,CADJ;AAWH;;;;EA1EcrB,S;;gBAAbK,I,eACiB;AACf;;;AAGAI,EAAAA,OAAO,EAAER,SAAS,CAACqB,KAAV,CAAgB;AACrBF,IAAAA,IAAI,EAAEnB,SAAS,CAACsB;AADK,GAAhB,CAJM;AAOfb,EAAAA,UAAU,EAAET,SAAS,CAACuB,IAAV,CAAeC,UAPZ;;AAQf;;;AAGAd,EAAAA,KAAK,EAAER,QAAQ,CAACsB,UAXD;;AAYf;;;AAGAb,EAAAA,MAAM,EAAEX,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAACuB,IAAX,EAAiBvB,SAAS,CAACsB,MAA3B,CAApB,EACHE,UAhBU;;AAiBf;;;AAGAZ,EAAAA,UAAU,EAAEZ,SAAS,CAACyB,SAAV,CAAoB,CAACzB,SAAS,CAACuB,IAAX,EAAiBvB,SAAS,CAACsB,MAA3B,CAApB,CApBG;;AAqBf;;;AAGAhB,EAAAA,iBAAiB,EAAEN,SAAS,CAACuB,IAxBd;;AAyBf;;;AAGAV,EAAAA,cAAc,EAAEb,SAAS,CAAC0B,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,CAAhB;AA5BD,C;;gBADjBtB,I,kBAgCoB;AAClBI,EAAAA,OAAO,EAAE,EADS;AAElBC,EAAAA,UAAU,EAAE;AAAA,QAAGkB,EAAH,QAAGA,EAAH;AAAA,WAAYA,EAAZ;AAAA,GAFM;AAGlBjB,EAAAA,KAAK,EAAE,EAHW;AAIlBC,EAAAA,MAAM,EAAE,KAJU;AAKlBC,EAAAA,UAAU,EAAE,KALM;AAMlBC,EAAAA,cAAc,EAAE;AANE,C;;AAqD1B,eAAeT,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fromRenderProp from '../util/fromRenderProp';\nimport iterable from '../validators/iterable';\nimport Items from './items';\n\n/**\n * The **List** component maps a collection of data objects into an array of elements.\n * It also manages the selection and focus of those elements.\n */\nclass List extends Component {\n    static propTypes = {\n        /**\n         * Class names to use when styling this component\n         */\n        classes: PropTypes.shape({\n            root: PropTypes.string\n        }),\n        getItemKey: PropTypes.func.isRequired,\n        /**\n         * An iterable that yields `[key, item]` pairs such as an ES2015 Map\n         */\n        items: iterable.isRequired,\n        /**\n         * A render prop for the list element. A tagname string, such as `\"div\"`, is also valid.\n         */\n        render: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n            .isRequired,\n        /**\n         * A render prop for the list item elements. A tagname string, such as `\"div\"`, is also valid.\n         */\n        renderItem: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n        /**\n         * A callback that fires when the selection state changes.\n         */\n        onSelectionChange: PropTypes.func,\n        /**\n         * A string corresponding to a selection model.\n         */\n        selectionModel: PropTypes.oneOf(['checkbox', 'radio'])\n    };\n\n    static defaultProps = {\n        classes: {},\n        getItemKey: ({ id }) => id,\n        items: [],\n        render: 'div',\n        renderItem: 'div',\n        selectionModel: 'radio'\n    };\n\n    render() {\n        const {\n            classes,\n            getItemKey,\n            items,\n            render,\n            renderItem,\n            onSelectionChange,\n            selectionModel,\n            ...restProps\n        } = this.props;\n\n        const customProps = {\n            classes,\n            getItemKey,\n            items,\n            onSelectionChange,\n            selectionModel\n        };\n\n        const Root = fromRenderProp(render, Object.keys(customProps));\n\n        return (\n            <Root className={classes.root} {...customProps} {...restProps}>\n                <Items\n                    items={items}\n                    getItemKey={getItemKey}\n                    renderItem={renderItem}\n                    selectionModel={selectionModel}\n                    onSelectionChange={this.handleSelectionChange}\n                />\n            </Root>\n        );\n    }\n\n    handleSelectionChange = selection => {\n        const { onSelectionChange } = this.props;\n\n        if (onSelectionChange) {\n            onSelectionChange(selection);\n        }\n    };\n}\n\nexport default List;\n"],"file":"list.js"}