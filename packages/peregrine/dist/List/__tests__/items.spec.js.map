{"version":3,"sources":["../../../src/List/__tests__/items.spec.js"],"names":["React","Fragment","shallow","Items","items","id","name","small_image","price","regularPrice","amount","value","test","props","wrapper","expect","type","toEqual","children","toHaveLength","length","elementType","renderItem","assertions","forEach","node","dive","Span","i","item","key","toMatchObject","itemIndex","render","hasFocus","isSelected","onBlur","instance","handleBlur","onClick","any","Function","onFocus","identity","x","tags","getItemKey","state","cursor","setState","selection","Set","add","has","childAt","simulate","toBe","index","selectionModel","spy","jest","spyOn","toHaveBeenCalled","onSelectionChange","fn","toHaveBeenCalledWith","getClickHandler","not","getFocusHandler"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { shallow } from 'enzyme';\n\nimport { Items } from '..';\n\nconst items = [\n    {\n        id: '001',\n        name: 'Test Product 1',\n        small_image: '/test/product/1.png',\n        price: {\n            regularPrice: {\n                amount: {\n                    value: 100\n                }\n            }\n        }\n    },\n    {\n        id: '002',\n        name: 'Test Product 2',\n        small_image: '/test/product/2.png',\n        price: {\n            regularPrice: {\n                amount: {\n                    value: 100\n                }\n            }\n        }\n    }\n];\n\ntest('renders a fragment', () => {\n    const props = { items };\n    const wrapper = shallow(<Items {...props} />);\n\n    expect(wrapper.type()).toEqual(Fragment);\n});\n\ntest('renders a child for each item', () => {\n    const props = { items };\n    const wrapper = shallow(<Items {...props} />);\n\n    expect(wrapper.children()).toHaveLength(items.length);\n});\n\ntest('renders basic children of type `renderItem`', () => {\n    const elementType = 'li';\n    const props = { items, renderItem: elementType };\n    const wrapper = shallow(<Items {...props} />);\n\n    expect.assertions(items.length);\n    wrapper.children().forEach(node => {\n        expect(\n            node\n                .dive()\n                .dive()\n                .type()\n        ).toEqual(elementType);\n    });\n});\n\ntest('renders composite children of type `renderItem`', () => {\n    const Span = () => <span />;\n    const props = { items, renderItem: Span };\n    const wrapper = shallow(<Items {...props} />);\n\n    expect.assertions(items.length);\n    wrapper.children().forEach(node => {\n        expect(node.dive().type()).toEqual(Span);\n    });\n});\n\ntest('passes correct props to each child', () => {\n    const elementType = 'li';\n    const props = { items, renderItem: elementType };\n    const wrapper = shallow(<Items {...props} />);\n\n    wrapper.children().forEach((node, i) => {\n        const item = items[i];\n        const key = item.id;\n\n        expect(node.key()).toEqual(key);\n        expect(node.props()).toMatchObject({\n            item,\n            itemIndex: i,\n            render: props.renderItem,\n            hasFocus: false,\n            isSelected: false,\n            onBlur: wrapper.instance().handleBlur,\n            onClick: expect.any(Function),\n            onFocus: expect.any(Function)\n        });\n    });\n});\n\ntest('uses keys generated by `getItemKey` if provided', () => {\n    const identity = x => x;\n    const tags = ['a', 'b', 'c'];\n    const props = { items: tags, getItemKey: identity };\n    const wrapper = shallow(<Items {...props} />);\n\n    wrapper.children().forEach((node, i) => {\n        expect(node.key()).toEqual(tags[i]);\n    });\n});\n\ntest('indicates the child at index `cursor` has focus', () => {\n    const props = { items };\n    const wrapper = shallow(<Items {...props} />);\n    const state = { cursor: 1, hasFocus: true };\n\n    wrapper.setState(state);\n\n    wrapper.children().forEach((node, i) => {\n        const item = items[i];\n\n        expect(node.props()).toMatchObject({\n            item,\n            hasFocus: i === state.cursor,\n            isSelected: false\n        });\n    });\n});\n\ntest('indicates no child has focus if the list is not focused', () => {\n    const props = { items };\n    const wrapper = shallow(<Items {...props} />);\n    const state = { cursor: 1, hasFocus: false };\n\n    wrapper.setState(state);\n\n    wrapper.children().forEach((node, i) => {\n        const item = items[i];\n\n        expect(node.props()).toMatchObject({\n            item,\n            hasFocus: false,\n            isSelected: false\n        });\n    });\n});\n\ntest('indicates whether a child is selected', () => {\n    const props = { items };\n    const wrapper = shallow(<Items {...props} />);\n    const selection = new Set().add('002');\n\n    wrapper.setState({ selection });\n\n    wrapper.children().forEach((node, i) => {\n        const item = items[i];\n        const key = item.id;\n\n        expect(node.props()).toMatchObject({\n            item,\n            hasFocus: false,\n            isSelected: selection.has(key)\n        });\n    });\n});\n\ntest('updates `hasFocus` on child blur', () => {\n    const props = { items };\n    const wrapper = shallow(<Items {...props} />);\n\n    wrapper.setState({ hasFocus: true });\n    wrapper.childAt(0).simulate('blur');\n\n    expect(wrapper.state('hasFocus')).toBe(false);\n});\n\ntest('updates `cursor` and `hasFocus` on child focus', () => {\n    const props = { items };\n    const wrapper = shallow(<Items {...props} />);\n    const index = 0;\n\n    wrapper.childAt(index).simulate('focus');\n\n    expect(wrapper.state()).toMatchObject({\n        cursor: index,\n        hasFocus: true\n    });\n});\n\ntest('updates radio `selection` on child click', () => {\n    const props = { items };\n    const wrapper = shallow(<Items {...props} />);\n\n    expect(wrapper.state('selection')).toEqual(new Set());\n\n    wrapper.childAt(0).simulate('click');\n    expect(wrapper.state('selection')).toEqual(new Set(['001']));\n\n    wrapper.childAt(1).simulate('click');\n    expect(wrapper.state('selection')).toEqual(new Set(['002']));\n\n    wrapper.childAt(0).simulate('click');\n    expect(wrapper.state('selection')).toEqual(new Set(['001']));\n});\n\ntest('updates checkbox `selection` on child click', () => {\n    const props = { items, selectionModel: 'checkbox' };\n    const wrapper = shallow(<Items {...props} />);\n\n    expect(wrapper.state('selection')).toEqual(new Set());\n\n    wrapper.childAt(0).simulate('click');\n    expect(wrapper.state('selection')).toEqual(new Set(['001']));\n\n    wrapper.childAt(1).simulate('click');\n    expect(wrapper.state('selection')).toEqual(new Set(['001', '002']));\n\n    wrapper.childAt(0).simulate('click');\n    expect(wrapper.state('selection')).toEqual(new Set(['002']));\n});\n\ntest('calls `syncSelection` after updating selection', () => {\n    const props = { items };\n    const wrapper = shallow(<Items {...props} />);\n    const spy = jest.spyOn(wrapper.instance(), 'syncSelection');\n\n    wrapper.childAt(0).simulate('click');\n\n    expect(spy).toHaveBeenCalled();\n});\n\ntest('calls `onSelectionChange` after updating selection', () => {\n    const onSelectionChange = jest.fn();\n    const props = { items, onSelectionChange };\n    const wrapper = shallow(<Items {...props} />);\n\n    wrapper.childAt(0).simulate('click');\n\n    expect(onSelectionChange).toHaveBeenCalledWith(wrapper.state('selection'));\n});\n\ntest('memoizes child click handlers', () => {\n    const props = { items };\n    const instance = shallow(<Items {...props} />).instance();\n\n    expect(instance.getClickHandler(0)).not.toBe(instance.getClickHandler(1));\n    expect(instance.getClickHandler(0)).toBe(instance.getClickHandler(0));\n});\n\ntest('memoizes child focus handlers', () => {\n    const props = { items };\n    const instance = shallow(<Items {...props} />).instance();\n\n    expect(instance.getFocusHandler(0)).not.toBe(instance.getFocusHandler(1));\n    expect(instance.getFocusHandler(0)).toBe(instance.getFocusHandler(0));\n});\n"],"file":"items.spec.js"}